{"version":3,"file":"static/js/1432.e37a4cf1.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/EventDestinations/WebhookSettings/AddEndpointModal.tsx","screens/Console/EventDestinations/WebhookSettings/DeleteWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/EditWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/WebhookSettings.tsx","screens/Console/EventDestinations/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx","screens/Console/Configurations/ConfigurationPanels/ExportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ImportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationOptions.tsx","screens/Console/Configurations/utils.tsx","screens/Console/EventDestinations/ConfTargetGeneric.tsx","screens/Console/EventDestinations/CustomForms/ResetConfigurationModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  Fragment,\n} from \"react\";\nimport get from \"lodash/get\";\nimport { AddIcon, Box, HelpIcon, InputBox, InputLabel, Tooltip } from \"mds\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  const onChangeCallback = useCallback(\n    (newString: string) => {\n      onChange(newString);\n    },\n    [onChange],\n  );\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChangeCallback(elementsString);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <InputBox\n        key={`csv-multi-${name}-${index.toString()}`}\n        id={`${name}-${index.toString()}`}\n        label={\"\"}\n        name={`${name}-${index.toString()}`}\n        value={currentElements[index]}\n        onChange={onChangeElement}\n        index={index}\n        placeholder={commonPlaceholder}\n        overlayIcon={index === currentElements.length - 1 ? <AddIcon /> : null}\n        overlayAction={() => {\n          addEmptyLine(currentElements);\n        }}\n      />\n    );\n  });\n\n  return (\n    <Fragment>\n      <Box sx={{ display: \"flex\" }} className={\"inputItem\"}>\n        <InputLabel\n          sx={{\n            alignItems: \"flex-start\",\n          }}\n        >\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <Box className={tooltip}>\n                  <HelpIcon />\n                </Box>\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            width: \"100%\",\n            overflowY: \"auto\",\n            height: 150,\n            position: \"relative\",\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Box>\n    </Fragment>\n  );\n};\nexport default CSVMultiSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  }),\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer,\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n  actionButton?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n  actionButton,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          className={`${classes.predefinedList} ${\n            actionButton ? classes.includesActionButton : \"\"\n          }`}\n        >\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n          {actionButton && (\n            <div className={classes.overlayShareOption}>{actionButton}</div>\n          )}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Button, FormLayout, Grid, InputBox } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Webhook } from \"@mui/icons-material\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { LinearProgress } from \"@mui/material\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  onCloseEndpoint: () => void;\n}\n\nconst AddEndpointModal = ({ open, type, onCloseEndpoint }: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n  ]);\n  const [initialInputs, setInitialInputs] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n    \"auth-token\",\n  ]);\n\n  const dispatch = useAppDispatch();\n\n  const saveWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (name.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"name\"]);\n\n      return;\n    }\n\n    if (endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n      ],\n      arn_resource_id: name,\n    };\n\n    api.configs\n      .setConfig(type, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const initializeInput = (name: string) => {\n    setInitialInputs(initialInputs.filter((item) => item !== name));\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  let title = \"Add new Webhook\";\n  let icon = <Webhook />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = \"New Logger Webhook\";\n      icon = <CallToActionIcon />;\n      break;\n    case \"audit_webhook\":\n      title = \"New Audit Webhook\";\n      icon = <PendingActionsIcon />;\n      break;\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={title}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <FormLayout containerPadding={false} withBorders={false}>\n          <InputBox\n            id=\"name\"\n            name=\"name\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"name\");\n              setName(event.target.value);\n              validateInput(\"name\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"name\") && !initialInputs.includes(\"name\")\n                ? \"Invalid Name\"\n                : \"\"\n            }\n            label=\"Name\"\n            value={name}\n            pattern={\"^(?=.*[a-zA-Z0-9]).{1,}$\"}\n            required\n          />\n          <InputBox\n            id=\"endpoint\"\n            name=\"endpoint\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"endpoint\");\n              setEndpoint(event.target.value);\n              validateInput(\"endpoint\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"endpoint\") &&\n              !initialInputs.includes(\"endpoint\")\n                ? \"Invalid Endpoint set\"\n                : \"\"\n            }\n            label=\"Endpoint\"\n            value={endpoint}\n            pattern={\n              \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n            }\n            required\n          />\n          <InputBox\n            id=\"auth-token\"\n            name=\"auth-token\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"auth-token\");\n              setAuthToken(event.target.value);\n            }}\n            label=\"Auth Token\"\n            value={authToken}\n          />\n        </FormLayout>\n        {saving && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginBottom: 10,\n            }}\n          >\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n          <Button\n            id={\"reset\"}\n            type=\"button\"\n            variant=\"regular\"\n            disabled={saving}\n            onClick={onCloseEndpoint}\n            label={\"Cancel\"}\n            sx={{\n              marginRight: 10,\n            }}\n          />\n          <Button\n            id={\"save-lifecycle\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={saving || invalidInputs.length !== 0}\n            label={\"Save\"}\n            onClick={saveWebhook}\n          />\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default AddEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteWebhookEndpoint {\n  modalOpen: boolean;\n  onClose: () => void;\n  selectedARN: string;\n  type: string;\n}\n\nconst DeleteWebhookEndpoint = ({\n  modalOpen,\n  onClose,\n  selectedARN,\n}: IDeleteWebhookEndpoint) => {\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (deleteLoading) {\n      api.configs\n        .resetConfig(selectedARN)\n        .then(() => {\n          setDeleteLoading(false);\n          dispatch(setServerNeedsRestart(true));\n          dispatch(configurationIsLoading(true));\n          onClose();\n        })\n        .catch((err) => {\n          setDeleteLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deleteLoading, dispatch, onClose, selectedARN]);\n\n  const onConfirmDelete = () => {\n    setDeleteLoading(true);\n  };\n\n  const defaultWH = !selectedARN.includes(\":\");\n\n  let message = \"Are you sure you want to delete the Configured Endpoint\";\n\n  // Main webhook, we just reset\n  if (defaultWH) {\n    message = \"Are you sure you want to reset the Default\";\n  }\n\n  return (\n    <ConfirmDialog\n      title={defaultWH ? `Reset Default Webhook` : `Delete Webhook`}\n      confirmText={defaultWH ? \"Reset\" : \"Delete\"}\n      isOpen={modalOpen}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={onClose}\n      confirmationContent={\n        <Fragment>\n          {`${message} `}\n          <strong>{selectedARN}</strong>?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteWebhookEndpoint;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, ConsoleIcon, Grid, Tooltip } from \"mds\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Webhook } from \"@mui/icons-material\";\nimport { formFieldStyles } from \"../../Common/FormComponents/common/styleLibrary\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { LinearProgress } from \"@mui/material\";\nimport { IConfigurationSys } from \"../../Configurations/types\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { overrideFields } from \"../../Configurations/utils\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  endpointInfo: IConfigurationSys;\n  onCloseEndpoint: () => void;\n}\n\nconst EditEndpointModal = ({\n  open,\n  type,\n  endpointInfo,\n  onCloseEndpoint,\n}: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [endpointState, setEndpointState] = useState<string>(\"on\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([]);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (endpointInfo) {\n      const endpointLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"endpoint\",\n      );\n      const tokenLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"auth_token\",\n      );\n      const enable = endpointInfo.key_values.find(\n        (key) => key.key === \"enable\",\n      );\n\n      let invalidInputs: string[] = [];\n\n      if (endpointLocate) {\n        const endpointValue = endpointLocate.value;\n\n        if (endpointValue === \"\") {\n          invalidInputs.push(\"endpoint\");\n        } else {\n          setEndpoint(endpointValue);\n        }\n      }\n\n      if (tokenLocate) {\n        const tokenValue = tokenLocate.value;\n\n        if (tokenValue === \"\") {\n          invalidInputs.push(\"auth-token\");\n        } else {\n          setAuthToken(tokenValue);\n        }\n      }\n\n      if (enable) {\n        if (enable.value === \"off\") {\n          setEndpointState(enable.value);\n        }\n      }\n\n      setName(endpointInfo.name || \"\");\n      setInvalidInput(invalidInputs);\n    }\n  }, [endpointInfo]);\n\n  const updateWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (!endpoint || endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n        {\n          key: \"enable\",\n          value: endpointState,\n        },\n      ],\n    };\n\n    api.configs\n      .setConfig(name, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  const defaultWH = !name.includes(\":\");\n  const hasOverride = endpointInfo.key_values.filter(\n    (itm) => !!itm.env_override,\n  );\n\n  const overrideValues = overrideFields(hasOverride);\n\n  let title = \"Edit Webhook\";\n  let icon = <Webhook />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Logger Webhook`;\n      icon = <CallToActionIcon />;\n      break;\n    case \"audit_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Audit Webhook`;\n      icon = <PendingActionsIcon />;\n      break;\n  }\n\n  if (hasOverride.length > 0) {\n    title = \"View env variable Webhook\";\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={`${title}${defaultWH ? \"\" : ` - ${name}`}`}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        {hasOverride.length > 0 ? (\n          <Fragment>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Enabled\"}\n                content={overrideValues.enable?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.enable.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Endpoint\"}\n                content={overrideValues.endpoint?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.endpoint.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Auth Token\"}\n                content={overrideValues.auth_token?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.auth_token.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <FormSwitchWrapper\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const value = e.target.checked ? \"on\" : \"off\";\n                  setEndpointState(value);\n                }}\n                id={\"endpoint_enabled\"}\n                name={\"endpoint_enabled\"}\n                label={\"Enabled\"}\n                value={\"switch_on\"}\n                checked={endpointState === \"on\"}\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <InputBoxWrapper\n                id=\"endpoint\"\n                name=\"endpoint\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setEndpoint(event.target.value);\n                  validateInput(\"endpoint\", event.target.validity.valid);\n                }}\n                error={\n                  invalidInputs.includes(\"endpoint\")\n                    ? \"Invalid Endpoint set\"\n                    : \"\"\n                }\n                label=\"Endpoint\"\n                value={endpoint}\n                pattern={\n                  \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n                }\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <InputBoxWrapper\n                id=\"auth-token\"\n                name=\"auth-token\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setAuthToken(event.target.value);\n                }}\n                label=\"Auth Token\"\n                value={authToken}\n              />\n            </Grid>\n            {saving && (\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  marginBottom: 10,\n                }}\n              >\n                <LinearProgress />\n              </Grid>\n            )}\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={saving}\n                onClick={onCloseEndpoint}\n                label={\"Cancel\"}\n                sx={{\n                  marginRight: 10,\n                }}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={saving || invalidInputs.length !== 0}\n                label={\"Update\"}\n                onClick={updateWebhook}\n              />\n            </Grid>\n          </Fragment>\n        )}\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default EditEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { IConfigurationSys, IElementValue } from \"../../Configurations/types\";\nimport {\n  Button,\n  ConsoleIcon,\n  DataTable,\n  Grid,\n  TierOfflineIcon,\n  TierOnlineIcon,\n} from \"mds\";\nimport AddEndpointModal from \"./AddEndpointModal\";\nimport DeleteWebhookEndpoint from \"./DeleteWebhookEndpoint\";\nimport EditWebhookEndpoint from \"./EditWebhookEndpoint\";\nimport { Configuration } from \"api/consoleApi\";\n\ninterface WebhookSettingsProps {\n  WebhookSettingslist: Configuration[];\n  setResetConfigurationOpen: () => void;\n  type: string;\n}\n\nconst WebhookSettings = ({\n  setResetConfigurationOpen,\n  WebhookSettingslist,\n  type,\n}: WebhookSettingsProps) => {\n  const [newEndpointOpen, setNewEndpointOpen] = useState<boolean>(false);\n  const [deleteWebhookOpen, setDeleteWebhookOpen] = useState<boolean>(false);\n  const [editWebhookOpen, setEditWebhookOpen] = useState<boolean>(false);\n  const [selectedARN, setSelectedARN] = useState<string>(\"\");\n  const [selectedEndpoint, setSelectedEndpoint] =\n    useState<IConfigurationSys | null>(null);\n\n  const renderEndpoint = (item: IElementValue[]) => {\n    const endpointFilter = item.find((itm) => itm.key === \"endpoint\");\n\n    if (endpointFilter) {\n      if (endpointFilter.env_override) {\n        return endpointFilter.env_override.value;\n      }\n\n      return endpointFilter.value;\n    }\n\n    return \"\";\n  };\n\n  const renderWebhookStatus = (item: IElementValue[]) => {\n    const EnableFilter = item.find((itm) => itm.key === \"enable\");\n\n    if (EnableFilter?.env_override) {\n      const overrideEnabled =\n        !EnableFilter?.env_override.value ||\n        EnableFilter?.env_override.value === \"on\" ||\n        !EnableFilter?.env_override.value\n          ? \"Enabled\"\n          : \"Disabled\";\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <ConsoleIcon style={{ fill: \"#052F51\", width: \"14px\" }} />\n          {overrideEnabled ? \"Enabled\" : \"Disabled\"}\n        </Grid>\n      );\n    }\n\n    // If enable is not set, then enabled by default\n    if (!EnableFilter || EnableFilter.value === \"on\" || !EnableFilter.value) {\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <TierOnlineIcon style={{ fill: \"#4CCB92\", width: 14, height: 14 }} />\n          Enabled\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyItems: \"start\",\n          fontSize: \"8px\",\n        }}\n      >\n        <TierOfflineIcon style={{ fill: \"#C83B51\", width: 14, height: 14 }} />\n        Disabled\n      </Grid>\n    );\n  };\n\n  const onCloseDelete = () => {\n    setDeleteWebhookOpen(false);\n    setSelectedARN(\"\");\n  };\n\n  const onCloseEditWebhook = () => {\n    setEditWebhookOpen(false);\n    setSelectedEndpoint(null);\n  };\n\n  const actions = [\n    {\n      type: \"view\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setEditWebhookOpen(true);\n          setSelectedEndpoint(item);\n        }\n      },\n    },\n    {\n      type: \"delete\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setDeleteWebhookOpen(true);\n          setSelectedARN(item.name);\n        }\n      },\n      disableButtonFunction: (item: string) => {\n        const wHook = WebhookSettingslist.find(\n          (element) => element.name === item,\n        );\n\n        if (wHook) {\n          const hasOverride = wHook.key_values?.filter(\n            (itm) => !!itm.env_override,\n          );\n\n          // Has override values, we cannot delete.\n          if (hasOverride && hasOverride.length > 0) {\n            return true;\n          }\n\n          return false;\n        }\n        return false;\n      },\n    },\n  ];\n  return (\n    <Grid container>\n      {newEndpointOpen && (\n        <AddEndpointModal\n          open={newEndpointOpen}\n          type={type}\n          onCloseEndpoint={() => {\n            setNewEndpointOpen(false);\n          }}\n        />\n      )}\n      {deleteWebhookOpen && (\n        <DeleteWebhookEndpoint\n          modalOpen={deleteWebhookOpen}\n          onClose={onCloseDelete}\n          selectedARN={selectedARN}\n          type={type}\n        />\n      )}\n      {editWebhookOpen && selectedEndpoint && (\n        <EditWebhookEndpoint\n          open={editWebhookOpen}\n          type={type}\n          endpointInfo={selectedEndpoint}\n          onCloseEndpoint={onCloseEditWebhook}\n        />\n      )}\n      <Grid item xs={12} sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          id={\"newWebhook\"}\n          variant=\"callAction\"\n          onClick={() => {\n            setNewEndpointOpen(true);\n          }}\n        >\n          New Endpoint\n        </Button>\n      </Grid>\n      <Grid item xs={12} sx={{ padding: \"0 10px 10px\" }}>\n        <Fragment>\n          <h3>Currently Configured Endpoints</h3>\n          <DataTable\n            columns={[\n              {\n                label: \"Status\",\n                elementKey: \"key_values\",\n                renderFunction: renderWebhookStatus,\n                width: 50,\n              },\n              { label: \"Name\", elementKey: \"name\" },\n              {\n                label: \"Endpoint\",\n                elementKey: \"key_values\",\n                renderFunction: renderEndpoint,\n              },\n            ]}\n            itemActions={actions}\n            idField=\"name\"\n            isLoading={false}\n            records={WebhookSettingslist}\n            entityName=\"endpoints\"\n            customPaperHeight={\"calc(100vh - 750px)\"}\n          />\n        </Fragment>\n      </Grid>\n    </Grid>\n  );\n};\nexport default WebhookSettings;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Box, Button, Grid, Loader } from \"mds\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { Configuration, ConfigurationKV } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  fieldsConfigurations,\n  overrideFields,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IElementValue,\n  IOverrideEnv,\n  KVField,\n} from \"../../Configurations/types\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setHelpName,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport WebhookSettings from \"../WebhookSettings/WebhookSettings\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\n\ninterface IAddNotificationEndpointProps {\n  selectedConfiguration: IConfigurationElement;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  selectedConfiguration,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [configSubsysList, setConfigSubsysList] = useState<Configuration[]>([]);\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  const [overrideEnvs, setOverrideEnvs] = useState<IOverrideEnv>({});\n\n  const loadingConfig = useSelector(\n    (state: AppState) => state.system.loadingConfigurations,\n  );\n\n  useEffect(() => {\n    dispatch(configurationIsLoading(true));\n  }, [selConfigTab, dispatch]);\n\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId) {\n        api.configs\n          .configInfo(configId)\n          .then((res) => {\n            setConfigSubsysList(res.data);\n            let values: ConfigurationKV[] = get(res.data[0], \"key_values\", []);\n\n            const fieldsConfig: KVField[] = fieldsConfigurations[configId];\n\n            const keyVals = fieldsConfig.map((field) => {\n              const includedValue = values.find(\n                (element: ConfigurationKV) => element.key === field.name,\n              );\n              const customValue = includedValue?.value || \"\";\n\n              return {\n                key: field.name,\n                value: field.customValueProcess\n                  ? field.customValueProcess(customValue)\n                  : customValue,\n              };\n            });\n\n            setConfigValues(keyVals);\n            setOverrideEnvs(overrideFields(keyVals));\n            dispatch(configurationIsLoading(false));\n          })\n          .catch((err) => {\n            dispatch(configurationIsLoading(false));\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n\n        return;\n      }\n      dispatch(configurationIsLoading(false));\n    }\n  }, [loadingConfig, selectedConfiguration, dispatch]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api.configs\n        .setConfig(selectedConfiguration.configuration_id, payload)\n        .then((res) => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(res.data.restart || false));\n          dispatch(configurationIsLoading(true));\n          if (!res.data.restart) {\n            dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n          }\n        })\n        .catch((err) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [saving, dispatch, selectedConfiguration, valuesObj, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueObj(newValue);\n    },\n    [setValueObj],\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    dispatch(setServerNeedsRestart(restart));\n    if (restart) {\n      dispatch(configurationIsLoading(true));\n    }\n  };\n\n  const resetConfigurationMOpen = () => {\n    setResetConfigurationOpen(true);\n  };\n\n  return (\n    <Fragment>\n      <div\n        onMouseMove={() => {\n          dispatch(\n            setHelpName(\n              `settings_${selectedConfiguration.configuration_label}`,\n            ),\n          );\n        }}\n      >\n        {resetConfigurationOpen && (\n          <ResetConfigurationModal\n            configurationName={selectedConfiguration.configuration_id}\n            closeResetModalAndRefresh={continueReset}\n            resetOpen={resetConfigurationOpen}\n          />\n        )}\n        {loadingConfig ? (\n          <Grid item xs={12} sx={{ textAlign: \"center\", paddingTop: \"15px\" }}>\n            <Loader />\n          </Grid>\n        ) : (\n          <Box\n            sx={{\n              padding: \"15px\",\n              height: \"100%\",\n            }}\n          >\n            {selectedConfiguration.configuration_id === \"logger_webhook\" ||\n            selectedConfiguration.configuration_id === \"audit_webhook\" ? (\n              <WebhookSettings\n                WebhookSettingslist={configSubsysList}\n                setResetConfigurationOpen={resetConfigurationMOpen}\n                type={selectedConfiguration.configuration_id}\n              />\n            ) : (\n              <Fragment>\n                <form\n                  noValidate\n                  onSubmit={submitForm}\n                  className={className}\n                  style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                  }}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      display: \"grid\",\n                      gridTemplateColumns: \"1fr\",\n                      gap: \"10px\",\n                    }}\n                  >\n                    <ConfTargetGeneric\n                      fields={\n                        fieldsConfigurations[\n                          selectedConfiguration.configuration_id\n                        ]\n                      }\n                      onChange={onValueChange}\n                      defaultVals={configValues}\n                      overrideEnv={overrideEnvs}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      paddingTop: \"15px \",\n                      textAlign: \"right\" as const,\n                      maxHeight: \"60px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-end\",\n                    }}\n                  >\n                    <Button\n                      type={\"button\"}\n                      id={\"restore-defaults\"}\n                      variant=\"secondary\"\n                      onClick={resetConfigurationMOpen}\n                      label={\"Restore Defaults\"}\n                    />\n                    &nbsp; &nbsp;\n                    <Button\n                      id={\"save\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      disabled={saving}\n                      label={\"Save\"}\n                    />\n                  </Grid>\n                </form>\n              </Fragment>\n            )}\n          </Box>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Grid } from \"mds\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../EventDestinations/CustomForms/EditConfiguration\";\n\nconst ConfigurationsList = () => {\n  const { pathname = \"\" } = useLocation();\n\n  const configName = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName,\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        height: \"100%\",\n        //LDAP and api forms have longer labels\n        \"& .identity_ldap, .api\": {\n          \"& label\": {\n            minWidth: 220,\n            marginRight: 0,\n          },\n        },\n      }}\n    >\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Button, UploadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { performDownload } from \"../../../../common/utils\";\nimport { DateTime } from \"luxon\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useDispatch } from \"react-redux\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst ExportConfigButton = () => {\n  const dispatch = useDispatch();\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      performDownload(\n        new Blob([window.atob(res.value)]),\n        `minio-server-config-${DateTime.now().toFormat(\n          \"LL-dd-yyyy-HH-mm-ss\",\n        )}.conf`,\n      );\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  return (\n    <TooltipWrapper tooltip=\"Warning! The resulting file will contain server configuration information in plain text\">\n      <Button\n        id={\"export-config\"}\n        onClick={() => {\n          invokeApi(\"GET\", `api/v1/configs/export`);\n        }}\n        icon={<UploadIcon />}\n        label={\"Export\"}\n        variant={\"regular\"}\n        disabled={isReqLoading}\n      />\n    </TooltipWrapper>\n  );\n};\n\nexport default ExportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { Button, DownloadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst ImportConfigButton = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const needsRestart = useSelector(\n    (state: AppState) => state.system.serverNeedsRestart,\n  );\n\n  const [refreshPage, setRefreshPage] = useState<boolean | undefined>(\n    undefined,\n  );\n  const fileUpload = useRef<HTMLInputElement>(null);\n\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      dispatch(setServerNeedsRestart(true)); //import should refreshPage as per mc.\n      setRefreshPage(true);\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  useEffect(() => {\n    if (!needsRestart && refreshPage) {\n      navigate(0); // refresh the page.\n    }\n  }, [needsRestart, refreshPage, navigate]);\n\n  const handleUploadButton = (e: any) => {\n    if (\n      e === null ||\n      e === undefined ||\n      e.target.files === null ||\n      e.target.files === undefined\n    ) {\n      return;\n    }\n    e.preventDefault();\n    const [fileToUpload] = e.target.files;\n\n    const formData = new FormData();\n    const blobFile = new Blob([fileToUpload], { type: fileToUpload.type });\n\n    formData.append(\"file\", blobFile, fileToUpload.name);\n    // @ts-ignore\n    invokeApi(\"POST\", `api/v1/configs/import`, formData);\n\n    e.target.value = \"\";\n  };\n\n  return (\n    <Fragment>\n      <input\n        type=\"file\"\n        onChange={handleUploadButton}\n        style={{ display: \"none\" }}\n        ref={fileUpload}\n      />\n      <TooltipWrapper tooltip=\"The file must be valid and  should have valid config values\">\n        <Button\n          id={\"import-config\"}\n          onClick={() => {\n            if (fileUpload && fileUpload.current) {\n              fileUpload.current.click();\n            }\n          }}\n          icon={<DownloadIcon />}\n          label={\"Import\"}\n          variant={\"regular\"}\n          disabled={isReqLoading}\n        />\n      </TooltipWrapper>\n    </Fragment>\n  );\n};\n\nexport default ImportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  HelpBox,\n  PageLayout,\n  ScreenTitle,\n  SettingsIcon,\n  Tabs,\n} from \"mds\";\n\nimport { configurationElements } from \"../utils\";\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n} from \"react-router-dom\";\n\nimport ConfigurationForm from \"./ConfigurationForm\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport ExportConfigButton from \"./ExportConfigButton\";\nimport ImportConfigButton from \"./ImportConfigButton\";\n\nimport HelpMenu from \"../../HelpMenu\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"../../../../api\";\nimport { IElement } from \"../types\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\nconst getRoutePath = (path: string) => {\n  return `${IAM_PAGES.SETTINGS}/${path}`;\n};\n\n// region is not part of config subsystem list.\nconst NON_SUB_SYS_CONFIG_ITEMS = [\"region\"];\nconst IGNORED_CONFIG_SUB_SYS = [\"cache\"]; // cache config is not supported.\n\nconst ConfigurationOptions = () => {\n  const { pathname = \"\" } = useLocation();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [configSubSysList, setConfigSubSysList] = useState<string[]>([]);\n  const fetchConfigSubSysList = useCallback(async () => {\n    api.configs\n      .listConfig() // get a list of available config subsystems.\n      .then((res) => {\n        if (res && res?.data && res?.data?.configurations) {\n          const confSubSysList = (res?.data?.configurations || []).reduce(\n            (acc: string[], { key = \"\" }) => {\n              if (!IGNORED_CONFIG_SUB_SYS.includes(key)) {\n                acc.push(key);\n              }\n              return acc;\n            },\n            [],\n          );\n\n          setConfigSubSysList(confSubSysList);\n        }\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(errorToHandler(err)));\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchConfigSubSysList();\n    dispatch(setHelpName(\"settings_Region\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const availableConfigSubSys = configurationElements.filter(\n    ({ configuration_id }: IElement) => {\n      return (\n        NON_SUB_SYS_CONFIG_ITEMS.includes(configuration_id) ||\n        configSubSysList.includes(configuration_id) ||\n        !configSubSysList.length\n      );\n    },\n  );\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Settings\"} actions={<HelpMenu />} />\n      <PageLayout>\n        <Grid item xs={12} id={\"settings-container\"}>\n          <ScreenTitle\n            icon={<SettingsIcon />}\n            title={\"MinIO Configuration:\"}\n            actions={\n              <Box\n                sx={{\n                  display: \"flex\",\n                  gap: 10,\n                }}\n              >\n                <ImportConfigButton />\n                <ExportConfigButton />\n              </Box>\n            }\n            sx={{ marginBottom: 15 }}\n          />\n          <Tabs\n            currentTabOrPath={pathname}\n            onTabClick={(path) => {\n              navigate(path);\n            }}\n            useRouteTabs\n            options={availableConfigSubSys.map((element) => {\n              const { configuration_id, configuration_label, icon } = element;\n              return {\n                tabConfig: {\n                  id: `settings-tab-${configuration_label}`,\n                  label: configuration_label,\n                  value: configuration_id,\n                  icon: icon,\n                  to: getRoutePath(configuration_id),\n                },\n              };\n            })}\n            routes={\n              <Routes>\n                {availableConfigSubSys.map((element) => (\n                  <Route\n                    key={`configItem-${element.configuration_label}`}\n                    path={`${element.configuration_id}`}\n                    element={<ConfigurationForm />}\n                  />\n                ))}\n                <Route\n                  path={\"/\"}\n                  element={<Navigate to={`${IAM_PAGES.SETTINGS}/region`} />}\n                />\n              </Routes>\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sx={{ paddingTop: \"15px\" }}>\n          <HelpBox\n            title={\"Learn more about Configurations\"}\n            iconComponent={<SettingsIcon />}\n            help={\n              <Fragment>\n                MinIO supports a variety of configurations ranging from\n                encryption, compression, region, notifications, etc.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-config.html?ref=con#id4\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ConfigurationOptions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport CompressIcon from \"@mui/icons-material/Compress\";\nimport CodeIcon from \"@mui/icons-material/Code\";\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\nimport FindReplaceIcon from \"@mui/icons-material/FindReplace\";\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport { IElement, IElementValue, IOverrideEnv, OverrideValue } from \"./types\";\nimport { LogsIcon } from \"mds\";\n\nexport const configurationElements: IElement[] = [\n  {\n    icon: <PublicIcon />,\n    configuration_id: \"region\",\n    configuration_label: \"Region\",\n  },\n  {\n    icon: <CompressIcon />,\n    configuration_id: \"compression\",\n    configuration_label: \"Compression\",\n  },\n  {\n    icon: <CodeIcon />,\n    configuration_id: \"api\",\n    configuration_label: \"API\",\n  },\n  {\n    icon: <LocalHospitalIcon />,\n    configuration_id: \"heal\",\n    configuration_label: \"Heal\",\n  },\n  {\n    icon: <FindReplaceIcon />,\n    configuration_id: \"scanner\",\n    configuration_label: \"Scanner\",\n  },\n  {\n    icon: <VpnKeyIcon />,\n    configuration_id: \"etcd\",\n    configuration_label: \"Etcd\",\n  },\n  {\n    icon: <CallToActionIcon />,\n    configuration_id: \"logger_webhook\",\n    configuration_label: \"Logger Webhook\",\n  },\n  {\n    icon: <PendingActionsIcon />,\n    configuration_id: \"audit_webhook\",\n    configuration_label: \"Audit Webhook\",\n  },\n  {\n    icon: (\n      <LogsIcon\n        className={\n          \"MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiTab-iconWrapper css-i4bv87-MuiSvgIcon-root\"\n        }\n        style={{ width: 24, height: 24 }}\n      />\n    ),\n    configuration_id: \"audit_kafka\",\n    configuration_label: \"Audit Kafka\",\n  },\n];\n\nexport const fieldsConfigurations: any = {\n  region: [\n    {\n      name: \"name\",\n      required: true,\n      label: \"Server Location\",\n      tooltip: 'Name of the location of the server e.g. \"us-west-rack2\"',\n      type: \"string\",\n      placeholder: \"e.g. us-west-rack-2\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  compression: [\n    {\n      name: \"extensions\",\n      required: false,\n      label: \"Extensions\",\n      tooltip:\n        'Extensions to compress e.g. \".txt\", \".log\" or \".csv\" -  you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter an Extension\",\n      withBorder: true,\n    },\n    {\n      name: \"mime_types\",\n      required: false,\n      label: \"Mime Types\",\n      tooltip:\n        'Mime types e.g. \"text/*\", \"application/json\" or \"application/xml\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter a Mime Type\",\n      withBorder: true,\n    },\n  ],\n  api: [\n    {\n      name: \"requests_max\",\n      required: false,\n      label: \"Requests Max\",\n      tooltip: \"Maximum number of concurrent requests, e.g. '1600'\",\n      type: \"number\",\n      placeholder: \"Enter Requests Max\",\n    },\n    {\n      name: \"cors_allow_origin\",\n      required: false,\n      label: \"Cors Allow Origin\",\n      tooltip: \"List of origins allowed for CORS requests\",\n      type: \"csv\",\n      placeholder: \"Enter allowed origin e.g. https://example.com\",\n    },\n    {\n      name: \"replication_workers\",\n      required: false,\n      label: \"Replication Workers\",\n      tooltip: \"Number of replication workers, defaults to 100\",\n      type: \"number\",\n      placeholder: \"Enter Replication Workers\",\n    },\n    {\n      name: \"replication_failed_workers\",\n      required: false,\n      label: \"Replication Failed Workers\",\n      tooltip:\n        \"Number of replication workers for recently failed replicas, defaults to 4\",\n      type: \"number\",\n      placeholder: \"Enter Replication Failed Workers\",\n    },\n  ],\n  heal: [\n    {\n      name: \"bitrotscan\",\n      required: false,\n      label: \"Bitrot Scan\",\n      tooltip:\n        \"Perform bitrot scan on disks when checking objects during scanner\",\n      type: \"on|off\",\n    },\n    {\n      name: \"max_sleep\",\n      required: false,\n      label: \"Max Sleep\",\n      tooltip:\n        \"Maximum sleep duration between objects to slow down heal operation, e.g. 2s\",\n      type: \"duration\",\n      placeholder: \"Enter Max Sleep Duration\",\n    },\n    {\n      name: \"max_io\",\n      required: false,\n      label: \"Max IO\",\n      tooltip:\n        \"Maximum IO requests allowed between objects to slow down heal operation, e.g. 3\",\n      type: \"number\",\n      placeholder: \"Enter Max IO\",\n    },\n  ],\n  scanner: [\n    {\n      name: \"delay\",\n      required: false,\n      label: \"Delay Multiplier\",\n      tooltip: \"Scanner delay multiplier, defaults to '10.0'\",\n      type: \"number\",\n      placeholder: \"Enter Delay\",\n    },\n    {\n      name: \"max_wait\",\n      required: false,\n      label: \"Max Wait\",\n      tooltip: \"Maximum wait time between operations, defaults to '15s'\",\n      type: \"duration\",\n      placeholder: \"Enter Max Wait\",\n    },\n    {\n      name: \"cycle\",\n      required: false,\n      label: \"Cycle\",\n      tooltip: \"Time duration between scanner cycles, defaults to '1m'\",\n      type: \"duration\",\n      placeholder: \"Enter Cycle\",\n    },\n  ],\n  etcd: [\n    {\n      name: \"endpoints\",\n      required: true,\n      label: \"Endpoints\",\n      tooltip:\n        'List of etcd endpoints e.g. \"http://localhost:2379\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"path_prefix\",\n      required: false,\n      label: \"Path Prefix\",\n      tooltip: 'Namespace prefix to isolate tenants e.g. \"customer1/\"',\n      type: \"string\",\n      placeholder: \"Enter Path Prefix\",\n    },\n    {\n      name: \"coredns_path\",\n      required: false,\n      label: \"Coredns Path\",\n      tooltip: 'Shared bucket DNS records, default is \"/skydns\"',\n      type: \"string\",\n      placeholder: \"Enter Coredns Path\",\n    },\n    {\n      name: \"client_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_cert_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      multiline: true,\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  logger_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_kafka: [\n    {\n      name: \"enable\",\n      required: false,\n      label: \"Enable\",\n      tooltip: \"Enable audit_kafka target\",\n      type: \"on|off\",\n      customValueProcess: (origValue: string) => {\n        return origValue === \"\" || origValue === \"on\" ? \"on\" : \"off\";\n      },\n    },\n    {\n      name: \"brokers\",\n      required: true,\n      label: \"Brokers\",\n      type: \"csv\",\n      placeholder: \"Enter Kafka Broker\",\n    },\n    {\n      name: \"topic\",\n      required: false,\n      label: \"Topic\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n    },\n    {\n      name: \"sasl\",\n      required: false,\n      label: \"Use SASL\",\n      tooltip:\n        \"Enable SASL (Simple Authentication and Security Layer) authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"sasl_username\",\n      required: false,\n      label: \"SASL Username\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_password\",\n      required: false,\n      label: \"SASL Password\",\n      type: \"password\",\n      placeholder: \"Enter SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      required: false,\n      label: \"SASL Mechanism\",\n      type: \"string\",\n      placeholder: \"Enter SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism\",\n    },\n    {\n      name: \"tls\",\n      required: false,\n      label: \"Use TLS\",\n      tooltip: \"Enable TLS (Transport Layer Security)\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      required: false,\n      label: \"Skip TLS Verification\",\n      tooltip: \"Trust server TLS without verification\",\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"tls_client_auth\",\n      required: false,\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"ClientAuth determines the Kafka server's policy for TLS client authorization\",\n      type: \"string\",\n    },\n    {\n      name: \"version\",\n      required: false,\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster\",\n      type: \"string\",\n    },\n  ],\n};\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const selectSAs = (\n  e: React.ChangeEvent<HTMLInputElement>,\n  setSelectedSAs: Function,\n  selectedSAs: string[],\n) => {\n  const targetD = e.target;\n  const value = targetD.value;\n  const checked = targetD.checked;\n\n  let elements: string[] = [...selectedSAs]; // We clone the selectedSAs array\n  if (checked) {\n    // If the user has checked this field we need to push this to selectedSAs\n    elements.push(value);\n  } else {\n    // User has unchecked this field, we need to remove it from the list\n    elements = elements.filter((element) => element !== value);\n  }\n  setSelectedSAs(elements);\n  return elements;\n};\n\nexport const overrideFields = (formFields: IElementValue[]): IOverrideEnv => {\n  let overrideReturn: IOverrideEnv = {};\n\n  formFields.forEach((envItem) => {\n    // it has override values, we construct the value\n    if (envItem.env_override) {\n      const value: OverrideValue = {\n        value: envItem.env_override.value,\n        overrideEnv: envItem.env_override.name,\n      };\n\n      overrideReturn = { ...overrideReturn, [envItem.key]: value };\n    }\n  });\n\n  return overrideReturn;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  CommentBox,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  ReadBox,\n  Switch,\n  Tooltip,\n} from \"mds\";\nimport { IElementValue, IOverrideEnv, KVField } from \"../Configurations/types\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  overrideEnv?: IOverrideEnv;\n}\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[],\n) => {\n  let defValue = type === \"on|off\" ? \"off\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value || \"\";\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  overrideEnv,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = fields.map((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      return stateInsert;\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    value = value.trim();\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    const holderItem = valueHolder[item];\n\n    if (holderItem) {\n      // Override Value with env var, we display generic string component\n      const override = overrideEnv?.[`${holderItem.key}`];\n\n      if (override) {\n        return (\n          <ReadBox\n            label={field.label}\n            actionButton={\n              <Grid\n                item\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  paddingRight: \"10px\",\n                }}\n              >\n                <Tooltip\n                  tooltip={`This value is set from the ${override.overrideEnv} environment variable`}\n                  placement={\"left\"}\n                >\n                  <ConsoleIcon style={{ width: 20 }} />\n                </Tooltip>\n              </Grid>\n            }\n            sx={{ width: \"100%\" }}\n          >\n            {override.value}\n          </ReadBox>\n        );\n      }\n    }\n\n    switch (field.type) {\n      case \"on|off\":\n        const value = holderItem ? holderItem.value : \"off\";\n\n        return (\n          <Switch\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"on\" : \"off\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"on\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={holderItem ? holderItem.value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string | string[]) => {\n              let valCh = \"\";\n\n              if (Array.isArray(value)) {\n                valCh = value.join(\",\");\n              } else {\n                valCh = value;\n              }\n\n              setValueElement(field.name, valCh, item);\n            }}\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e) => setValueElement(field.name, e.target.value, item)}\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <FormLayout withBorders={false} containerPadding={false}>\n      {fieldsElements.map((field, item) => (\n        <Fragment key={field.name}>{fieldDefinition(field, item)}</Fragment>\n      ))}\n    </FormLayout>\n  );\n};\n\nexport default ConfTargetGeneric;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { LinearProgress } from \"@mui/material\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IResetConfiguration {\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api.configs\n        .resetConfig(configurationName)\n        .then(() => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <Fragment>\n          {resetLoading && <LinearProgress />}\n          <Fragment>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b\n              style={{\n                maxWidth: \"200px\",\n                whiteSpace: \"normal\",\n                wordWrap: \"break-word\",\n              }}\n            >\n              Please note that this may cause your system to not be accessible\n            </b>\n          </Fragment>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default ResetConfigurationModal;\n"],"names":["_ref","elements","name","label","_ref$tooltip","tooltip","_ref$commonPlaceholde","commonPlaceholder","onChange","_ref$withBorder","withBorder","_useState","useState","_useState2","_slicedToArray","currentElements","setCurrentElements","bottomList","createRef","useEffect","length","elementsSplit","split","push","refScroll","current","scrollIntoView","onChangeCallback","useCallback","newString","firstUpdate","useRef","elementsString","filter","element","trim","join","onChangeElement","e","persist","updatedElement","_toConsumableArray","index","get","target","parseInt","value","inputs","map","_jsx","InputBox","id","concat","toString","placeholder","overlayIcon","AddIcon","overlayAction","elementsUp","cpList","addEmptyLine","Fragment","children","_jsxs","Box","sx","display","className","InputLabel","alignItems","marginLeft","width","Tooltip","placement","HelpIcon","withBorders","overflowY","height","position","ref","StyledSwitch","withStyles","theme","root","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","createStyles","_objectSpread","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","actionsTray","fieldBasic","_ref$label","_ref$checked","_ref$disabled","disabled","_ref$switchOnly","switchOnly","_ref$description","description","classes","indicatorLabels","_ref$extraInputProps","extraInputProps","switchComponent","React","clsx","_defineProperty","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","Grid","container","item","xs","sm","md","htmlFor","inputLabel","tooltipContainer","title","textAlign","Typography","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","tooltipHelper","textBoxContainer","flexGrow","right","top","maxWidth","maxHeight","_ref$type","type","_ref$autoComplete","autoComplete","_ref$multiline","multiline","_ref$index","_ref$error","error","_ref$required","required","_ref$placeholder","min","max","overlayId","_ref$overlayIcon","_ref$overlayObject","overlayObject","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","IconButton","onClick","size","predefinedList","content","_ref$multiLine","multiLine","actionButton","prefinedContainer","predefinedTitle","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","open","onCloseEndpoint","setName","_useState3","_useState4","endpoint","setEndpoint","_useState5","_useState6","authToken","setAuthToken","_useState7","_useState8","saving","setSaving","_useState9","_useState10","invalidInputs","setInvalidInput","_useState11","_useState12","initialInputs","setInitialInputs","dispatch","useAppDispatch","initializeInput","validateInput","valid","includes","icon","Webhook","CallToActionIcon","PendingActionsIcon","ModalWrapper","modalOpen","onClose","titleIcon","FormLayout","containerPadding","event","validity","marginBottom","LinearProgress","modalStyleUtils","modalButtonBar","Button","variant","marginRight","payload","key_values","key","arn_resource_id","api","configs","setConfig","then","res","setServerNeedsRestart","data","restart","setSnackBarMessage","configurationIsLoading","catch","err","setErrorSnackMessage","errorToHandler","selectedARN","deleteLoading","setDeleteLoading","resetConfig","defaultWH","message","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","ConfirmDeleteIcon","confirmationContent","_overrideValues$enabl","_overrideValues$endpo","_overrideValues$auth_","endpointInfo","endpointState","setEndpointState","endpointLocate","find","tokenLocate","enable","endpointValue","tokenValue","hasOverride","itm","env_override","overrideValues","overrideFields","formFieldStyles","formFieldRow","PredefinedList","paddingRight","overrideEnv","ConsoleIcon","style","auth_token","FormSwitchWrapper","InputBoxWrapper","setResetConfigurationOpen","WebhookSettingslist","newEndpointOpen","setNewEndpointOpen","deleteWebhookOpen","setDeleteWebhookOpen","editWebhookOpen","setEditWebhookOpen","setSelectedARN","selectedEndpoint","setSelectedEndpoint","actions","disableButtonFunction","wHook","_wHook$key_values","AddEndpointModal","DeleteWebhookEndpoint","EditWebhookEndpoint","DataTable","columns","elementKey","renderFunction","EnableFilter","overrideEnabled","flexDirection","justifyItems","fill","TierOfflineIcon","TierOnlineIcon","endpointFilter","itemActions","idField","records","entityName","customPaperHeight","selectedConfiguration","navigate","useNavigate","_useLocation$pathname","useLocation","pathname","selConfigTab","substring","lastIndexOf","valuesObj","setValueObj","configValues","setConfigValues","configSubsysList","setConfigSubsysList","resetConfigurationOpen","overrideEnvs","setOverrideEnvs","loadingConfig","useSelector","state","system","loadingConfigurations","configId","configInfo","values","keyVals","fieldsConfigurations","field","includedValue","customValue","customValueProcess","removeEmptyFields","configuration_id","onValueChange","newValue","resetConfigurationMOpen","onMouseMove","setHelpName","configuration_label","ResetConfigurationModal","configurationName","closeResetModalAndRefresh","resetOpen","paddingTop","Loader","WebhookSettings","noValidate","onSubmit","preventDefault","flexFlow","gridTemplateColumns","gap","ConfTargetGeneric","fields","defaultVals","configName","validActiveConfig","configurationElements","containerClassName","minWidth","EditConfiguration","useDispatch","_useApi","useApi","performDownload","Blob","window","atob","DateTime","now","toFormat","_useApi2","isReqLoading","invokeApi","TooltipWrapper","UploadIcon","needsRestart","serverNeedsRestart","undefined","refreshPage","setRefreshPage","fileUpload","files","fileToUpload","formData","FormData","blobFile","append","click","DownloadIcon","NON_SUB_SYS_CONFIG_ITEMS","IGNORED_CONFIG_SUB_SYS","configSubSysList","setConfigSubSysList","fetchConfigSubSysList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","listConfig","_res$data","configurations","_res$data2","confSubSysList","reduce","acc","_ref2","_ref2$key","stop","availableConfigSubSys","_ref3","PageHeaderWrapper","HelpMenu","PageLayout","ScreenTitle","SettingsIcon","ImportConfigButton","ExportConfigButton","Tabs","currentTabOrPath","onTabClick","path","useRouteTabs","options","tabConfig","to","IAM_PAGES","SETTINGS","routes","Routes","Route","ConfigurationForm","Navigate","HelpBox","iconComponent","help","href","rel","PublicIcon","CompressIcon","CodeIcon","LocalHospitalIcon","FindReplaceIcon","VpnKeyIcon","LogsIcon","region","compression","heal","scanner","etcd","logger_webhook","audit_webhook","audit_kafka","origValue","formFields","selectSAs","setSelectedSAs","selectedSAs","targetD","overrideReturn","forEach","envItem","valueDef","defaults","defValue","storedConfig","valueHolder","setValueHolder","fieldsElements","defValList","setValueElement","valuesDup","fieldDefinition","holderItem","override","ReadBox","CSVMultiSelector","valCh","Array","isArray","CommentBox","resetLoading","setResetLoading","whiteSpace","wordWrap"],"sourceRoot":""}