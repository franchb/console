{"version":3,"file":"static/js/5693.42442779.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Support/RegisterCluster.tsx","screens/Console/Support/CallHomeConfirmation.tsx","screens/Console/Support/CallHome.tsx","screens/Console/Tools/Tools.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null,\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, breakPoints, Button, Grid, HelpBox, WarnIcon } from \"mds\";\n\ninterface IRegisterCluster {\n  compactMode?: boolean;\n}\n\nconst RegisterCluster = ({ compactMode = false }: IRegisterCluster) => {\n  const navigate = useNavigate();\n\n  const redirectButton = (\n    <Button\n      id={\"go-to-register\"}\n      type=\"submit\"\n      variant=\"callAction\"\n      color=\"primary\"\n      onClick={() => navigate(\"/support/register\")}\n    >\n      Register your Cluster\n    </Button>\n  );\n\n  const registerMessage =\n    \"Please use your MinIO Subscription Network login credentials to register this cluster and enable this feature.\";\n\n  if (compactMode) {\n    return (\n      <Fragment>\n        <Grid\n          sx={{\n            \"& div.leftItems\": {\n              marginBottom: 0,\n            },\n          }}\n        >\n          <HelpBox\n            title={\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  flexGrow: 1,\n                }}\n              >\n                <span>{registerMessage}</span> {redirectButton}\n              </div>\n            }\n            iconComponent={<WarnIcon />}\n            help={null}\n          />\n        </Grid>\n        <br />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        padding: \"25px\",\n        border: \"1px solid #eaeaea\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexFlow: \"row\",\n        marginBottom: \"15px\",\n        [`@media (max-width: ${breakPoints.sm}px)`]: {\n          flexFlow: \"column\",\n        },\n      }}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              marginRight: \"8px\",\n              fontSize: \"16px\",\n              fontWeight: 600,\n              display: \"flex\",\n              alignItems: \"center\",\n\n              \"& .min-icon\": {\n                width: \"83px\",\n                height: \"14px\",\n                marginLeft: \"5px\",\n                marginRight: \"5px\",\n              },\n            }}\n          >\n            Register your cluster\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexFlow: \"row\",\n              [`@media (max-width: ${breakPoints.sm}px)`]: {\n                flexFlow: \"column\",\n              },\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n                flex: \"2\",\n              }}\n            >\n              <Box\n                sx={{\n                  fontSize: \"16px\",\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  marginTop: \"15px\",\n                  marginBottom: \"15px\",\n                }}\n              >\n                {registerMessage}\n              </Box>\n              <Box\n                sx={{\n                  flex: \"1\",\n                }}\n              >\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  {redirectButton}\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default RegisterCluster;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Button, CallHomeMenuIcon, CircleIcon, Grid, ProgressBar } from \"mds\";\n\nimport api from \"../../../common/api\";\nimport { ICallHomeResponse } from \"./types\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage, setSnackBarMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\n\ninterface ICallHomeConfirmation {\n  onClose: (refresh: boolean) => any;\n  open: boolean;\n  diagStatus: boolean;\n  disable?: boolean;\n}\n\nconst CallHomeConfirmation = ({\n  onClose,\n  diagStatus,\n  open,\n  disable = false,\n}: ICallHomeConfirmation) => {\n  const dispatch = useAppDispatch();\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const onConfirmAction = () => {\n    setLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/support/callhome`, {\n        diagState: disable ? false : diagStatus,\n        logsState: false,\n      })\n      .then((res: ICallHomeResponse) => {\n        dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        setLoading(false);\n        onClose(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      title={disable ? \"Disable Call Home\" : \"Edit Call Home Configurations\"}\n      onClose={() => onClose(false)}\n      titleIcon={<CallHomeMenuIcon />}\n    >\n      {disable ? (\n        <Fragment>\n          Please Acknowledge that after doing this action, we will no longer\n          receive updated cluster information automatically, losing the\n          potential benefits that Call Home provides to your MinIO cluster.\n          <Grid item xs={12} sx={{ margin: \"15px 0\" }}>\n            Are you sure you want to disable SUBNET Call Home?\n          </Grid>\n          <br />\n          {loading && (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                marginBottom: 10,\n              }}\n            >\n              <ProgressBar />\n            </Grid>\n          )}\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Button\n              id={\"reset\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={loading}\n              onClick={() => onClose(false)}\n              label={\"Cancel\"}\n              sx={{\n                marginRight: 10,\n              }}\n            />\n            <Button\n              id={\"save-lifecycle\"}\n              type=\"submit\"\n              variant={\"secondary\"}\n              color=\"primary\"\n              disabled={loading}\n              label={\"Yes, Disable Call Home\"}\n              onClick={onConfirmAction}\n            />\n          </Grid>\n        </Fragment>\n      ) : (\n        <Fragment>\n          Are you sure you want to change the following configurations for\n          SUBNET Call Home:\n          <Grid\n            item\n            sx={{\n              margin: \"20px 0\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 15,\n            }}\n          >\n            <Grid item sx={{ display: \"flex\", alignItems: \"center\", gap: 10 }}>\n              <CircleIcon\n                style={{ fill: diagStatus ? \"#4CCB92\" : \"#C83B51\", width: 20 }}\n              />\n              <span>\n                <strong>{diagStatus ? \"Enable\" : \"Disable\"}</strong> - Send\n                Diagnostics Information to SUBNET\n              </span>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sx={{ margin: \"15px 0\" }}>\n            Please Acknowledge that the information provided will only be\n            available in your SUBNET Account and it will not be shared to other\n            persons or entities besides MinIO team and you.\n          </Grid>\n          {loading && (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                marginBottom: 10,\n              }}\n            >\n              <ProgressBar />\n            </Grid>\n          )}\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Button\n              id={\"reset\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={loading}\n              onClick={() => onClose(false)}\n              label={\"Cancel\"}\n              sx={{\n                marginRight: 10,\n              }}\n            />\n            <Button\n              id={\"save-lifecycle\"}\n              type=\"submit\"\n              variant={\"callAction\"}\n              color=\"primary\"\n              disabled={loading}\n              label={\"Yes, Save this Configuration\"}\n              onClick={onConfirmAction}\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default CallHomeConfirmation;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  CallHomeMenuIcon,\n  FormLayout,\n  HelpBox,\n  Loader,\n  PageLayout,\n  Switch,\n} from \"mds\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport api from \"../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { ICallHomeResponse } from \"./types\";\nimport { registeredCluster } from \"../../../config\";\nimport CallHomeConfirmation from \"./CallHomeConfirmation\";\nimport RegisterCluster from \"./RegisterCluster\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst CallHome = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showConfirmation, setShowConfirmation] = useState<boolean>(false);\n  const [diagEnabled, setDiagEnabled] = useState<boolean>(false);\n  const [oDiagEnabled, setODiagEnabled] = useState<boolean>(false);\n  const [disableMode, setDisableMode] = useState<boolean>(false);\n\n  const clusterRegistered = registeredCluster();\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/support/callhome`)\n        .then((res: ICallHomeResponse) => {\n          setLoading(false);\n\n          setDiagEnabled(!!res.diagnosticsStatus);\n\n          setODiagEnabled(!!res.diagnosticsStatus);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [loading, dispatch]);\n\n  const callHomeClose = (refresh: boolean) => {\n    if (refresh) {\n      setLoading(true);\n    }\n    setShowConfirmation(false);\n  };\n\n  const confirmCallHomeAction = () => {\n    if (!clusterRegistered) {\n      navigate(\"/support/register\");\n      return;\n    }\n    setDisableMode(false);\n    setShowConfirmation(true);\n  };\n\n  const disableCallHomeAction = () => {\n    setDisableMode(true);\n    setShowConfirmation(true);\n  };\n\n  let mainVariant: \"regular\" | \"callAction\" = \"regular\";\n\n  if (clusterRegistered && diagEnabled !== oDiagEnabled) {\n    mainVariant = \"callAction\";\n  }\n\n  useEffect(() => {\n    dispatch(setHelpName(\"call_home\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      {showConfirmation && (\n        <CallHomeConfirmation\n          onClose={callHomeClose}\n          open={showConfirmation}\n          diagStatus={diagEnabled}\n          disable={disableMode}\n        />\n      )}\n      <PageHeaderWrapper label=\"Call Home\" actions={<HelpMenu />} />\n      <PageLayout>\n        {!clusterRegistered && <RegisterCluster compactMode />}\n        <FormLayout\n          helpBox={\n            <HelpBox\n              title={\"Learn more about Call Home\"}\n              iconComponent={<CallHomeMenuIcon />}\n              help={\n                <Fragment>\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      flexFlow: \"column\",\n                      fontSize: \"14px\",\n                      flex: \"2\",\n                      marginTop: \"10px\",\n                    }}\n                  >\n                    <Box>\n                      Enabling Call Home sends cluster health & status to your\n                      registered MinIO Subscription Network account every 24\n                      hours.\n                      <br />\n                      <br />\n                      This helps the MinIO support team to provide quick\n                      incident responses along with suggestions for possible\n                      improvements that can be made to your MinIO instances.\n                      <br />\n                      <br />\n                      Your cluster must be{\" \"}\n                      <Link to={\"/support/register\"}>registered</Link> in the\n                      MinIO Subscription Network (SUBNET) before enabling this\n                      feature.\n                    </Box>\n                  </Box>\n                </Fragment>\n              }\n            />\n          }\n        >\n          {loading ? (\n            <span style={{ marginLeft: 5 }}>\n              <Loader style={{ width: 16, height: 16 }} />\n            </span>\n          ) : (\n            <Fragment>\n              <Switch\n                value=\"enableDiag\"\n                id=\"enableDiag\"\n                name=\"enableDiag\"\n                checked={diagEnabled}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setDiagEnabled(event.target.checked);\n                }}\n                label={\"Daily Health Report\"}\n                disabled={!clusterRegistered}\n                description={\n                  \"Daily Health Report enables you to proactively identify potential issues in your deployment before they escalate.\"\n                }\n              />\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"55px\",\n                  gap: \"0px 10px\",\n                }}\n              >\n                {oDiagEnabled && (\n                  <Button\n                    id={\"callhome-action\"}\n                    variant={\"secondary\"}\n                    data-test-id=\"call-home-toggle-button\"\n                    onClick={disableCallHomeAction}\n                    disabled={loading || !clusterRegistered}\n                  >\n                    Disable Call Home\n                  </Button>\n                )}\n                <Button\n                  id={\"callhome-action\"}\n                  type=\"button\"\n                  variant={mainVariant}\n                  data-test-id=\"call-home-toggle-button\"\n                  onClick={confirmCallHomeAction}\n                  disabled={loading || !clusterRegistered}\n                >\n                  Save Configuration\n                </Button>\n              </Box>\n            </Fragment>\n          )}\n        </FormLayout>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default CallHome;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport NotFoundPage from \"../../NotFoundPage\";\nimport CallHome from \"../Support/CallHome\";\n\nconst Inspect = withSuspense(React.lazy(() => import(\"./Inspect\")));\nconst Register = withSuspense(React.lazy(() => import(\"../Support/Register\")));\nconst Profile = withSuspense(React.lazy(() => import(\"../Support/Profile\")));\n\nconst Tools = () => {\n  return (\n    <Routes>\n      <Route path={\"register\"} element={<Register />} />\n      <Route path={\"profile\"} element={<Profile />} />\n      <Route path={\"call-home\"} element={<CallHome />} />\n      <Route path={\"inspect\"} element={<Inspect />} />\n      <Route path={\"*\"} element={<NotFoundPage />} />\n    </Routes>\n  );\n};\n\nexport default Tools;\n"],"names":["WrappedComponent","fallback","arguments","length","undefined","props","_jsx","Suspense","children","_ref","onClose","modalOpen","title","wideLimit","titleIcon","iconColor","sx","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","useState","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","type","detailedErrorMsg","_jsxs","ModalBox","open","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","variant","autoHideDuration","condensed","compactMode","navigate","useNavigate","redirectButton","Button","id","color","onClick","registerMessage","Fragment","Grid","marginBottom","HelpBox","style","display","justifyContent","alignItems","flexGrow","iconComponent","WarnIcon","help","Box","padding","border","flexFlow","concat","breakPoints","sm","container","item","xs","marginRight","fontSize","fontWeight","width","height","marginLeft","flex","marginTop","diagStatus","disable","loading","setLoading","onConfirmAction","api","invoke","diagState","logsState","then","res","setSnackBarMessage","catch","err","setErrorSnackMessage","ModalWrapper","CallHomeMenuIcon","margin","ProgressBar","disabled","label","flexDirection","gap","CircleIcon","fill","CallHome","showConfirmation","setShowConfirmation","diagEnabled","setDiagEnabled","oDiagEnabled","setODiagEnabled","disableMode","setDisableMode","clusterRegistered","registeredCluster","diagnosticsStatus","mainVariant","setHelpName","CallHomeConfirmation","refresh","PageHeaderWrapper","actions","HelpMenu","PageLayout","RegisterCluster","FormLayout","helpBox","Link","to","Loader","Switch","value","name","checked","onChange","event","target","description","disableCallHomeAction","confirmCallHomeAction","Inspect","withSuspense","React","Register","Profile","Tools","Routes","Route","path","element","NotFoundPage"],"sourceRoot":""}