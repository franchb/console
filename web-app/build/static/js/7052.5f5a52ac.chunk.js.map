{"version":3,"file":"static/js/7052.5f5a52ac.chunk.js","mappings":"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","sources":["screens/Console/EventDestinations/ConfTargetGeneric.tsx","screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/Configurations/utils.tsx","screens/Console/EventDestinations/CustomForms/ResetConfigurationModal.tsx","screens/Console/EventDestinations/WebhookSettings/AddEndpointModal.tsx","screens/Console/EventDestinations/WebhookSettings/DeleteWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/EditWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/WebhookSettings.tsx","screens/Console/EventDestinations/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx","screens/Console/Configurations/ConfigurationPanels/ExportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ImportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationOptions.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  CommentBox,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  ReadBox,\n  Switch,\n  Tooltip,\n} from \"mds\";\nimport { IElementValue, IOverrideEnv, KVField } from \"../Configurations/types\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  overrideEnv?: IOverrideEnv;\n}\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nconst valueDef = (key: string, type: string, defaults: IElementValue[]) => {\n  let defValue = type === \"on|off\" ? \"off\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value || \"\";\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  overrideEnv,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = fields.map((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      return stateInsert;\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    value = value.trim();\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    const holderItem = valueHolder[item];\n\n    if (holderItem) {\n      // Override Value with env var, we display generic string component\n      const override = overrideEnv?.[`${holderItem.key}`];\n\n      if (override) {\n        return (\n          <ReadBox\n            label={field.label}\n            actionButton={\n              <Grid\n                item\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  paddingRight: \"10px\",\n                }}\n              >\n                <Tooltip\n                  tooltip={`This value is set from the ${override.overrideEnv} environment variable`}\n                  placement={\"left\"}\n                >\n                  <ConsoleIcon style={{ width: 20 }} />\n                </Tooltip>\n              </Grid>\n            }\n            sx={{ width: \"100%\" }}\n          >\n            {override.value}\n          </ReadBox>\n        );\n      }\n    }\n\n    switch (field.type) {\n      case \"on|off\":\n        const value = holderItem ? holderItem.value : \"off\";\n\n        return (\n          <Switch\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"on\" : \"off\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"on\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={holderItem ? holderItem.value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string | string[]) => {\n              let valCh = \"\";\n\n              if (Array.isArray(value)) {\n                valCh = value.join(\",\");\n              } else {\n                valCh = value;\n              }\n\n              setValueElement(field.name, valCh, item);\n            }}\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e) => setValueElement(field.name, e.target.value, item)}\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <FormLayout withBorders={false} containerPadding={false}>\n      {fieldsElements.map((field, item) => (\n        <Fragment key={field.name}>{fieldDefinition(field, item)}</Fragment>\n      ))}\n    </FormLayout>\n  );\n};\n\nexport default ConfTargetGeneric;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  Fragment,\n} from \"react\";\nimport get from \"lodash/get\";\nimport { AddIcon, Box, HelpIcon, InputBox, InputLabel, Tooltip } from \"mds\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  const onChangeCallback = useCallback(\n    (newString: string) => {\n      onChange(newString);\n    },\n    [onChange],\n  );\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChangeCallback(elementsString);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <InputBox\n        key={`csv-multi-${name}-${index.toString()}`}\n        id={`${name}-${index.toString()}`}\n        label={\"\"}\n        name={`${name}-${index.toString()}`}\n        value={currentElements[index]}\n        onChange={onChangeElement}\n        index={index}\n        placeholder={commonPlaceholder}\n        overlayIcon={index === currentElements.length - 1 ? <AddIcon /> : null}\n        overlayAction={() => {\n          addEmptyLine(currentElements);\n        }}\n      />\n    );\n  });\n\n  return (\n    <Fragment>\n      <Box sx={{ display: \"flex\" }} className={\"inputItem\"}>\n        <InputLabel\n          sx={{\n            alignItems: \"flex-start\",\n          }}\n        >\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <Box className={tooltip}>\n                  <HelpIcon />\n                </Box>\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            width: \"100%\",\n            overflowY: \"auto\",\n            height: 150,\n            position: \"relative\",\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Box>\n    </Fragment>\n  );\n};\nexport default CSVMultiSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { IElement, IElementValue, IOverrideEnv, OverrideValue } from \"./types\";\nimport {\n  CodeIcon,\n  CompressIcon,\n  ConsoleIcon,\n  FindReplaceIcon,\n  FirstAidIcon,\n  KeyIcon,\n  LogsIcon,\n  PendingItemsIcon,\n  PublicIcon,\n} from \"mds\";\n\nexport const configurationElements: IElement[] = [\n  {\n    icon: <PublicIcon />,\n    configuration_id: \"region\",\n    configuration_label: \"Region\",\n  },\n  {\n    icon: <CompressIcon />,\n    configuration_id: \"compression\",\n    configuration_label: \"Compression\",\n  },\n  {\n    icon: <CodeIcon />,\n    configuration_id: \"api\",\n    configuration_label: \"API\",\n  },\n  {\n    icon: <FirstAidIcon />,\n    configuration_id: \"heal\",\n    configuration_label: \"Heal\",\n  },\n  {\n    icon: <FindReplaceIcon />,\n    configuration_id: \"scanner\",\n    configuration_label: \"Scanner\",\n  },\n  {\n    icon: <KeyIcon />,\n    configuration_id: \"etcd\",\n    configuration_label: \"Etcd\",\n  },\n  {\n    icon: <ConsoleIcon />,\n    configuration_id: \"logger_webhook\",\n    configuration_label: \"Logger Webhook\",\n  },\n  {\n    icon: <PendingItemsIcon />,\n    configuration_id: \"audit_webhook\",\n    configuration_label: \"Audit Webhook\",\n  },\n  {\n    icon: <LogsIcon />,\n    configuration_id: \"audit_kafka\",\n    configuration_label: \"Audit Kafka\",\n  },\n];\n\nexport const fieldsConfigurations: any = {\n  region: [\n    {\n      name: \"name\",\n      required: true,\n      label: \"Server Location\",\n      tooltip: 'Name of the location of the server e.g. \"us-west-rack2\"',\n      type: \"string\",\n      placeholder: \"e.g. us-west-rack-2\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  compression: [\n    {\n      name: \"extensions\",\n      required: false,\n      label: \"Extensions\",\n      tooltip:\n        'Extensions to compress e.g. \".txt\", \".log\" or \".csv\" -  you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter an Extension\",\n      withBorder: true,\n    },\n    {\n      name: \"mime_types\",\n      required: false,\n      label: \"Mime Types\",\n      tooltip:\n        'Mime types e.g. \"text/*\", \"application/json\" or \"application/xml\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter a Mime Type\",\n      withBorder: true,\n    },\n  ],\n  api: [\n    {\n      name: \"requests_max\",\n      required: false,\n      label: \"Requests Max\",\n      tooltip: \"Maximum number of concurrent requests, e.g. '1600'\",\n      type: \"number\",\n      placeholder: \"Enter Requests Max\",\n    },\n    {\n      name: \"cors_allow_origin\",\n      required: false,\n      label: \"Cors Allow Origin\",\n      tooltip: \"List of origins allowed for CORS requests\",\n      type: \"csv\",\n      placeholder: \"Enter allowed origin e.g. https://example.com\",\n    },\n    {\n      name: \"replication_workers\",\n      required: false,\n      label: \"Replication Workers\",\n      tooltip: \"Number of replication workers, defaults to 100\",\n      type: \"number\",\n      placeholder: \"Enter Replication Workers\",\n    },\n    {\n      name: \"replication_failed_workers\",\n      required: false,\n      label: \"Replication Failed Workers\",\n      tooltip:\n        \"Number of replication workers for recently failed replicas, defaults to 4\",\n      type: \"number\",\n      placeholder: \"Enter Replication Failed Workers\",\n    },\n  ],\n  heal: [\n    {\n      name: \"bitrotscan\",\n      required: false,\n      label: \"Bitrot Scan\",\n      tooltip:\n        \"Perform bitrot scan on disks when checking objects during scanner\",\n      type: \"on|off\",\n    },\n    {\n      name: \"max_sleep\",\n      required: false,\n      label: \"Max Sleep\",\n      tooltip:\n        \"Maximum sleep duration between objects to slow down heal operation, e.g. 2s\",\n      type: \"duration\",\n      placeholder: \"Enter Max Sleep Duration\",\n    },\n    {\n      name: \"max_io\",\n      required: false,\n      label: \"Max IO\",\n      tooltip:\n        \"Maximum IO requests allowed between objects to slow down heal operation, e.g. 3\",\n      type: \"number\",\n      placeholder: \"Enter Max IO\",\n    },\n  ],\n  scanner: [\n    {\n      name: \"delay\",\n      required: false,\n      label: \"Delay Multiplier\",\n      tooltip: \"Scanner delay multiplier, defaults to '10.0'\",\n      type: \"number\",\n      placeholder: \"Enter Delay\",\n    },\n    {\n      name: \"max_wait\",\n      required: false,\n      label: \"Max Wait\",\n      tooltip: \"Maximum wait time between operations, defaults to '15s'\",\n      type: \"duration\",\n      placeholder: \"Enter Max Wait\",\n    },\n    {\n      name: \"cycle\",\n      required: false,\n      label: \"Cycle\",\n      tooltip: \"Time duration between scanner cycles, defaults to '1m'\",\n      type: \"duration\",\n      placeholder: \"Enter Cycle\",\n    },\n  ],\n  etcd: [\n    {\n      name: \"endpoints\",\n      required: true,\n      label: \"Endpoints\",\n      tooltip:\n        'List of etcd endpoints e.g. \"http://localhost:2379\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"path_prefix\",\n      required: false,\n      label: \"Path Prefix\",\n      tooltip: 'Namespace prefix to isolate tenants e.g. \"customer1/\"',\n      type: \"string\",\n      placeholder: \"Enter Path Prefix\",\n    },\n    {\n      name: \"coredns_path\",\n      required: false,\n      label: \"Coredns Path\",\n      tooltip: 'Shared bucket DNS records, default is \"/skydns\"',\n      type: \"string\",\n      placeholder: \"Enter Coredns Path\",\n    },\n    {\n      name: \"client_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_cert_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      multiline: true,\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  logger_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_kafka: [\n    {\n      name: \"enable\",\n      required: false,\n      label: \"Enable\",\n      tooltip: \"Enable audit_kafka target\",\n      type: \"on|off\",\n      customValueProcess: (origValue: string) => {\n        return origValue === \"\" || origValue === \"on\" ? \"on\" : \"off\";\n      },\n    },\n    {\n      name: \"brokers\",\n      required: true,\n      label: \"Brokers\",\n      type: \"csv\",\n      placeholder: \"Enter Kafka Broker\",\n    },\n    {\n      name: \"topic\",\n      required: false,\n      label: \"Topic\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n    },\n    {\n      name: \"sasl\",\n      required: false,\n      label: \"Use SASL\",\n      tooltip:\n        \"Enable SASL (Simple Authentication and Security Layer) authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"sasl_username\",\n      required: false,\n      label: \"SASL Username\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_password\",\n      required: false,\n      label: \"SASL Password\",\n      type: \"password\",\n      placeholder: \"Enter SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      required: false,\n      label: \"SASL Mechanism\",\n      type: \"string\",\n      placeholder: \"Enter SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism\",\n    },\n    {\n      name: \"tls\",\n      required: false,\n      label: \"Use TLS\",\n      tooltip: \"Enable TLS (Transport Layer Security)\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      required: false,\n      label: \"Skip TLS Verification\",\n      tooltip: \"Trust server TLS without verification\",\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"tls_client_auth\",\n      required: false,\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"ClientAuth determines the Kafka server's policy for TLS client authorization\",\n      type: \"string\",\n    },\n    {\n      name: \"version\",\n      required: false,\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster\",\n      type: \"string\",\n    },\n  ],\n};\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const selectSAs = (\n  e: React.ChangeEvent<HTMLInputElement>,\n  setSelectedSAs: Function,\n  selectedSAs: string[],\n) => {\n  const targetD = e.target;\n  const value = targetD.value;\n  const checked = targetD.checked;\n\n  let elements: string[] = [...selectedSAs]; // We clone the selectedSAs array\n  if (checked) {\n    // If the user has checked this field we need to push this to selectedSAs\n    elements.push(value);\n  } else {\n    // User has unchecked this field, we need to remove it from the list\n    elements = elements.filter((element) => element !== value);\n  }\n  setSelectedSAs(elements);\n  return elements;\n};\n\nexport const overrideFields = (formFields: IElementValue[]): IOverrideEnv => {\n  let overrideReturn: IOverrideEnv = {};\n\n  formFields.forEach((envItem) => {\n    // it has override values, we construct the value\n    if (envItem.env_override) {\n      const value: OverrideValue = {\n        value: envItem.env_override.value || \"\",\n        overrideEnv: envItem.env_override.name || \"\",\n      };\n\n      overrideReturn = { ...overrideReturn, [envItem.key]: value };\n    }\n  });\n\n  return overrideReturn;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\nimport { ConfirmDeleteIcon, ProgressBar } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IResetConfiguration {\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api.configs\n        .resetConfig(configurationName)\n        .then(() => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <Fragment>\n          {resetLoading && <ProgressBar />}\n          <Fragment>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b\n              style={{\n                maxWidth: \"200px\",\n                whiteSpace: \"normal\",\n                wordWrap: \"break-word\",\n              }}\n            >\n              Please note that this may cause your system to not be accessible\n            </b>\n          </Fragment>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default ResetConfigurationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  PendingItemsIcon,\n  ProgressBar,\n  WebhookIcon,\n} from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  onCloseEndpoint: () => void;\n}\n\nconst AddEndpointModal = ({ open, type, onCloseEndpoint }: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n  ]);\n  const [initialInputs, setInitialInputs] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n    \"auth-token\",\n  ]);\n\n  const dispatch = useAppDispatch();\n\n  const saveWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (name.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"name\"]);\n\n      return;\n    }\n\n    if (endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n      ],\n      arn_resource_id: name,\n    };\n\n    api.configs\n      .setConfig(type, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const initializeInput = (name: string) => {\n    setInitialInputs(initialInputs.filter((item) => item !== name));\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  let title = \"Add new Webhook\";\n  let icon = <WebhookIcon />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = \"New Logger Webhook\";\n      icon = <ConsoleIcon />;\n      break;\n    case \"audit_webhook\":\n      title = \"New Audit Webhook\";\n      icon = <PendingItemsIcon />;\n      break;\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={title}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <FormLayout containerPadding={false} withBorders={false}>\n          <InputBox\n            id=\"name\"\n            name=\"name\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"name\");\n              setName(event.target.value);\n              validateInput(\"name\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"name\") && !initialInputs.includes(\"name\")\n                ? \"Invalid Name\"\n                : \"\"\n            }\n            label=\"Name\"\n            value={name}\n            pattern={\"^(?=.*[a-zA-Z0-9]).{1,}$\"}\n            required\n          />\n          <InputBox\n            id=\"endpoint\"\n            name=\"endpoint\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"endpoint\");\n              setEndpoint(event.target.value);\n              validateInput(\"endpoint\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"endpoint\") &&\n              !initialInputs.includes(\"endpoint\")\n                ? \"Invalid Endpoint set\"\n                : \"\"\n            }\n            label=\"Endpoint\"\n            value={endpoint}\n            pattern={\n              \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n            }\n            required\n          />\n          <InputBox\n            id=\"auth-token\"\n            name=\"auth-token\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"auth-token\");\n              setAuthToken(event.target.value);\n            }}\n            label=\"Auth Token\"\n            value={authToken}\n          />\n        </FormLayout>\n        {saving && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginBottom: 10,\n            }}\n          >\n            <ProgressBar />\n          </Grid>\n        )}\n        <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n          <Button\n            id={\"reset\"}\n            type=\"button\"\n            variant=\"regular\"\n            disabled={saving}\n            onClick={onCloseEndpoint}\n            label={\"Cancel\"}\n            sx={{\n              marginRight: 10,\n            }}\n          />\n          <Button\n            id={\"save-lifecycle\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={saving || invalidInputs.length !== 0}\n            label={\"Save\"}\n            onClick={saveWebhook}\n          />\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default AddEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteWebhookEndpoint {\n  modalOpen: boolean;\n  onClose: () => void;\n  selectedARN: string;\n  type: string;\n}\n\nconst DeleteWebhookEndpoint = ({\n  modalOpen,\n  onClose,\n  selectedARN,\n}: IDeleteWebhookEndpoint) => {\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (deleteLoading) {\n      api.configs\n        .resetConfig(selectedARN)\n        .then(() => {\n          setDeleteLoading(false);\n          dispatch(setServerNeedsRestart(true));\n          dispatch(configurationIsLoading(true));\n          onClose();\n        })\n        .catch((err) => {\n          setDeleteLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deleteLoading, dispatch, onClose, selectedARN]);\n\n  const onConfirmDelete = () => {\n    setDeleteLoading(true);\n  };\n\n  const defaultWH = !selectedARN.includes(\":\");\n\n  let message = \"Are you sure you want to delete the Configured Endpoint\";\n\n  // Main webhook, we just reset\n  if (defaultWH) {\n    message = \"Are you sure you want to reset the Default\";\n  }\n\n  return (\n    <ConfirmDialog\n      title={defaultWH ? `Reset Default Webhook` : `Delete Webhook`}\n      confirmText={defaultWH ? \"Reset\" : \"Delete\"}\n      isOpen={modalOpen}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={onClose}\n      confirmationContent={\n        <Fragment>\n          {`${message} `}\n          <strong>{selectedARN}</strong>?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteWebhookEndpoint;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Button,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  PendingItemsIcon,\n  ProgressBar,\n  ReadBox,\n  Switch,\n  Tooltip,\n  WebhookIcon,\n} from \"mds\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nimport { IConfigurationSys } from \"../../Configurations/types\";\nimport { overrideFields } from \"../../Configurations/utils\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  endpointInfo: IConfigurationSys;\n  onCloseEndpoint: () => void;\n}\n\nconst EditEndpointModal = ({\n  open,\n  type,\n  endpointInfo,\n  onCloseEndpoint,\n}: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [endpointState, setEndpointState] = useState<string>(\"on\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([]);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (endpointInfo) {\n      const endpointLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"endpoint\",\n      );\n      const tokenLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"auth_token\",\n      );\n      const enable = endpointInfo.key_values.find(\n        (key) => key.key === \"enable\",\n      );\n\n      let invalidInputs: string[] = [];\n\n      if (endpointLocate) {\n        const endpointValue = endpointLocate.value;\n\n        if (endpointValue === \"\") {\n          invalidInputs.push(\"endpoint\");\n        } else {\n          setEndpoint(endpointValue);\n        }\n      }\n\n      if (tokenLocate) {\n        const tokenValue = tokenLocate.value;\n\n        if (tokenValue === \"\") {\n          invalidInputs.push(\"auth-token\");\n        } else {\n          setAuthToken(tokenValue);\n        }\n      }\n\n      if (enable) {\n        if (enable.value === \"off\") {\n          setEndpointState(enable.value);\n        }\n      }\n\n      setName(endpointInfo.name || \"\");\n      setInvalidInput(invalidInputs);\n    }\n  }, [endpointInfo]);\n\n  const updateWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (!endpoint || endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n        {\n          key: \"enable\",\n          value: endpointState,\n        },\n      ],\n    };\n\n    api.configs\n      .setConfig(name, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  const defaultWH = !name.includes(\":\");\n  const hasOverride = endpointInfo.key_values.filter(\n    (itm) => !!itm.env_override,\n  );\n\n  const overrideValues = overrideFields(hasOverride);\n\n  let title = \"Edit Webhook\";\n  let icon = <WebhookIcon />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Logger Webhook`;\n      icon = <ConsoleIcon />;\n      break;\n    case \"audit_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Audit Webhook`;\n      icon = <PendingItemsIcon />;\n      break;\n  }\n\n  if (hasOverride.length > 0) {\n    title = \"View env variable Webhook\";\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={`${title}${defaultWH ? \"\" : ` - ${name}`}`}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <FormLayout withBorders={false} containerPadding={false}>\n          {hasOverride.length > 0 ? (\n            <Fragment>\n              <ReadBox\n                label={\"Enabled\"}\n                sx={{ width: \"100%\" }}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${\n                              overrideValues.enable?.overrideEnv || \"N/A\"\n                            } environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              >\n                {overrideValues.enable?.value || \"-\"}\n              </ReadBox>\n              <ReadBox\n                label={\"Endpoint\"}\n                sx={{ width: \"100%\" }}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${\n                              overrideValues.endpoint?.overrideEnv || \"N/A\"\n                            } environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              >\n                {overrideValues.endpoint?.value || \"-\"}\n              </ReadBox>\n              <ReadBox\n                label={\"Auth Token\"}\n                sx={{ width: \"100%\" }}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${\n                              overrideValues.auth_token?.overrideEnv || \"N/A\"\n                            } environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              >\n                {overrideValues.auth_token?.value || \"-\"}\n              </ReadBox>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Switch\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const value = e.target.checked ? \"on\" : \"off\";\n                  setEndpointState(value);\n                }}\n                id={\"endpoint_enabled\"}\n                name={\"endpoint_enabled\"}\n                label={\"Enabled\"}\n                value={\"switch_on\"}\n                checked={endpointState === \"on\"}\n              />\n              <InputBox\n                id=\"endpoint\"\n                name=\"endpoint\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setEndpoint(event.target.value);\n                  validateInput(\"endpoint\", event.target.validity.valid);\n                }}\n                error={\n                  invalidInputs.includes(\"endpoint\")\n                    ? \"Invalid Endpoint set\"\n                    : \"\"\n                }\n                label=\"Endpoint\"\n                value={endpoint}\n                pattern={\n                  \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n                }\n                required\n              />\n              <InputBox\n                id=\"auth-token\"\n                name=\"auth-token\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setAuthToken(event.target.value);\n                }}\n                label=\"Auth Token\"\n                value={authToken}\n              />\n              {saving && (\n                <Grid\n                  item\n                  xs={12}\n                  sx={{\n                    marginBottom: 10,\n                  }}\n                >\n                  <ProgressBar />\n                </Grid>\n              )}\n              <Grid item sx={modalStyleUtils.modalButtonBar}>\n                <Button\n                  id={\"reset\"}\n                  type=\"button\"\n                  variant=\"regular\"\n                  disabled={saving}\n                  onClick={onCloseEndpoint}\n                  label={\"Cancel\"}\n                />\n                <Button\n                  id={\"save-lifecycle\"}\n                  type=\"submit\"\n                  variant=\"callAction\"\n                  color=\"primary\"\n                  disabled={saving || invalidInputs.length !== 0}\n                  label={\"Update\"}\n                  onClick={updateWebhook}\n                />\n              </Grid>\n            </Fragment>\n          )}\n        </FormLayout>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default EditEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { IConfigurationSys, IElementValue } from \"../../Configurations/types\";\nimport {\n  Button,\n  ConsoleIcon,\n  DataTable,\n  Grid,\n  TierOfflineIcon,\n  TierOnlineIcon,\n} from \"mds\";\nimport AddEndpointModal from \"./AddEndpointModal\";\nimport DeleteWebhookEndpoint from \"./DeleteWebhookEndpoint\";\nimport EditWebhookEndpoint from \"./EditWebhookEndpoint\";\nimport { Configuration } from \"api/consoleApi\";\n\ninterface WebhookSettingsProps {\n  WebhookSettingslist: Configuration[];\n  setResetConfigurationOpen: () => void;\n  type: string;\n}\n\nconst WebhookSettings = ({\n  setResetConfigurationOpen,\n  WebhookSettingslist,\n  type,\n}: WebhookSettingsProps) => {\n  const [newEndpointOpen, setNewEndpointOpen] = useState<boolean>(false);\n  const [deleteWebhookOpen, setDeleteWebhookOpen] = useState<boolean>(false);\n  const [editWebhookOpen, setEditWebhookOpen] = useState<boolean>(false);\n  const [selectedARN, setSelectedARN] = useState<string>(\"\");\n  const [selectedEndpoint, setSelectedEndpoint] =\n    useState<IConfigurationSys | null>(null);\n\n  const renderEndpoint = (item: IElementValue[]) => {\n    const endpointFilter = item.find((itm) => itm.key === \"endpoint\");\n\n    if (endpointFilter) {\n      if (endpointFilter.env_override) {\n        return endpointFilter.env_override.value;\n      }\n\n      return endpointFilter.value;\n    }\n\n    return \"\";\n  };\n\n  const renderWebhookStatus = (item: IElementValue[]) => {\n    const EnableFilter = item.find((itm) => itm.key === \"enable\");\n\n    if (EnableFilter?.env_override) {\n      const overrideEnabled =\n        !EnableFilter?.env_override.value ||\n        EnableFilter?.env_override.value === \"on\" ||\n        !EnableFilter?.env_override.value\n          ? \"Enabled\"\n          : \"Disabled\";\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <ConsoleIcon style={{ fill: \"#052F51\", width: \"14px\" }} />\n          {overrideEnabled ? \"Enabled\" : \"Disabled\"}\n        </Grid>\n      );\n    }\n\n    // If enable is not set, then enabled by default\n    if (!EnableFilter || EnableFilter.value === \"on\" || !EnableFilter.value) {\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <TierOnlineIcon style={{ fill: \"#4CCB92\", width: 14, height: 14 }} />\n          Enabled\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyItems: \"start\",\n          fontSize: \"8px\",\n        }}\n      >\n        <TierOfflineIcon style={{ fill: \"#C83B51\", width: 14, height: 14 }} />\n        Disabled\n      </Grid>\n    );\n  };\n\n  const onCloseDelete = () => {\n    setDeleteWebhookOpen(false);\n    setSelectedARN(\"\");\n  };\n\n  const onCloseEditWebhook = () => {\n    setEditWebhookOpen(false);\n    setSelectedEndpoint(null);\n  };\n\n  const actions = [\n    {\n      type: \"view\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setEditWebhookOpen(true);\n          setSelectedEndpoint(item);\n        }\n      },\n    },\n    {\n      type: \"delete\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setDeleteWebhookOpen(true);\n          setSelectedARN(item.name);\n        }\n      },\n      disableButtonFunction: (item: string) => {\n        const wHook = WebhookSettingslist.find(\n          (element) => element.name === item,\n        );\n\n        if (wHook) {\n          const hasOverride = wHook.key_values?.filter(\n            (itm) => !!itm.env_override,\n          );\n\n          // Has override values, we cannot delete.\n          if (hasOverride && hasOverride.length > 0) {\n            return true;\n          }\n\n          return false;\n        }\n        return false;\n      },\n    },\n  ];\n  return (\n    <Grid container>\n      {newEndpointOpen && (\n        <AddEndpointModal\n          open={newEndpointOpen}\n          type={type}\n          onCloseEndpoint={() => {\n            setNewEndpointOpen(false);\n          }}\n        />\n      )}\n      {deleteWebhookOpen && (\n        <DeleteWebhookEndpoint\n          modalOpen={deleteWebhookOpen}\n          onClose={onCloseDelete}\n          selectedARN={selectedARN}\n          type={type}\n        />\n      )}\n      {editWebhookOpen && selectedEndpoint && (\n        <EditWebhookEndpoint\n          open={editWebhookOpen}\n          type={type}\n          endpointInfo={selectedEndpoint}\n          onCloseEndpoint={onCloseEditWebhook}\n        />\n      )}\n      <Grid item xs={12} sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          id={\"newWebhook\"}\n          variant=\"callAction\"\n          onClick={() => {\n            setNewEndpointOpen(true);\n          }}\n        >\n          New Endpoint\n        </Button>\n      </Grid>\n      <Grid item xs={12} sx={{ padding: \"0 10px 10px\" }}>\n        <Fragment>\n          <h3>Currently Configured Endpoints</h3>\n          <DataTable\n            columns={[\n              {\n                label: \"Status\",\n                elementKey: \"key_values\",\n                renderFunction: renderWebhookStatus,\n                width: 50,\n              },\n              { label: \"Name\", elementKey: \"name\" },\n              {\n                label: \"Endpoint\",\n                elementKey: \"key_values\",\n                renderFunction: renderEndpoint,\n              },\n            ]}\n            itemActions={actions}\n            idField=\"name\"\n            isLoading={false}\n            records={WebhookSettingslist}\n            entityName=\"endpoints\"\n            customPaperHeight={\"calc(100vh - 750px)\"}\n          />\n        </Fragment>\n      </Grid>\n    </Grid>\n  );\n};\nexport default WebhookSettings;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Box, Button, Grid, Loader } from \"mds\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { Configuration, ConfigurationKV } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  fieldsConfigurations,\n  overrideFields,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IElementValue,\n  IOverrideEnv,\n  KVField,\n} from \"../../Configurations/types\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setHelpName,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport WebhookSettings from \"../WebhookSettings/WebhookSettings\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\n\ninterface IAddNotificationEndpointProps {\n  selectedConfiguration: IConfigurationElement;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  selectedConfiguration,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [configSubsysList, setConfigSubsysList] = useState<Configuration[]>([]);\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  const [overrideEnvs, setOverrideEnvs] = useState<IOverrideEnv>({});\n\n  const loadingConfig = useSelector(\n    (state: AppState) => state.system.loadingConfigurations,\n  );\n\n  useEffect(() => {\n    dispatch(configurationIsLoading(true));\n  }, [selConfigTab, dispatch]);\n\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId) {\n        api.configs\n          .configInfo(configId)\n          .then((res) => {\n            setConfigSubsysList(res.data);\n            let values: ConfigurationKV[] = get(res.data[0], \"key_values\", []);\n\n            const fieldsConfig: KVField[] = fieldsConfigurations[configId];\n\n            const keyVals: IElementValue[] = fieldsConfig.map((field) => {\n              const includedValue = values.find(\n                (element: ConfigurationKV) => element.key === field.name,\n              );\n              const customValue = includedValue?.value || \"\";\n\n              return {\n                key: field.name,\n                value: field.customValueProcess\n                  ? field.customValueProcess(customValue)\n                  : customValue,\n                env_override: includedValue?.env_override,\n              };\n            });\n\n            setConfigValues(keyVals);\n            setOverrideEnvs(overrideFields(keyVals));\n            dispatch(configurationIsLoading(false));\n          })\n          .catch((err) => {\n            dispatch(configurationIsLoading(false));\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n\n        return;\n      }\n      dispatch(configurationIsLoading(false));\n    }\n  }, [loadingConfig, selectedConfiguration, dispatch]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api.configs\n        .setConfig(selectedConfiguration.configuration_id, payload)\n        .then((res) => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(res.data.restart || false));\n          dispatch(configurationIsLoading(true));\n          if (!res.data.restart) {\n            dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n          }\n        })\n        .catch((err) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [saving, dispatch, selectedConfiguration, valuesObj, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueObj(newValue);\n    },\n    [setValueObj],\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    dispatch(setServerNeedsRestart(restart));\n    if (restart) {\n      dispatch(configurationIsLoading(true));\n    }\n  };\n\n  const resetConfigurationMOpen = () => {\n    setResetConfigurationOpen(true);\n  };\n\n  return (\n    <Fragment>\n      <div\n        onMouseMove={() => {\n          dispatch(\n            setHelpName(\n              `settings_${selectedConfiguration.configuration_label}`,\n            ),\n          );\n        }}\n      >\n        {resetConfigurationOpen && (\n          <ResetConfigurationModal\n            configurationName={selectedConfiguration.configuration_id}\n            closeResetModalAndRefresh={continueReset}\n            resetOpen={resetConfigurationOpen}\n          />\n        )}\n        {loadingConfig ? (\n          <Grid item xs={12} sx={{ textAlign: \"center\", paddingTop: \"15px\" }}>\n            <Loader />\n          </Grid>\n        ) : (\n          <Box\n            sx={{\n              padding: \"15px\",\n              height: \"100%\",\n            }}\n          >\n            {selectedConfiguration.configuration_id === \"logger_webhook\" ||\n            selectedConfiguration.configuration_id === \"audit_webhook\" ? (\n              <WebhookSettings\n                WebhookSettingslist={configSubsysList}\n                setResetConfigurationOpen={resetConfigurationMOpen}\n                type={selectedConfiguration.configuration_id}\n              />\n            ) : (\n              <Fragment>\n                <form\n                  noValidate\n                  onSubmit={submitForm}\n                  className={className}\n                  style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                  }}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      display: \"grid\",\n                      gridTemplateColumns: \"1fr\",\n                      gap: \"10px\",\n                    }}\n                  >\n                    <ConfTargetGeneric\n                      fields={\n                        fieldsConfigurations[\n                          selectedConfiguration.configuration_id\n                        ]\n                      }\n                      onChange={onValueChange}\n                      defaultVals={configValues}\n                      overrideEnv={overrideEnvs}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      paddingTop: \"15px \",\n                      textAlign: \"right\" as const,\n                      maxHeight: \"60px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-end\",\n                    }}\n                  >\n                    <Button\n                      type={\"button\"}\n                      id={\"restore-defaults\"}\n                      variant=\"secondary\"\n                      onClick={resetConfigurationMOpen}\n                      label={\"Restore Defaults\"}\n                    />\n                    &nbsp; &nbsp;\n                    <Button\n                      id={\"save\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      disabled={saving}\n                      label={\"Save\"}\n                    />\n                  </Grid>\n                </form>\n              </Fragment>\n            )}\n          </Box>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Grid } from \"mds\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../EventDestinations/CustomForms/EditConfiguration\";\n\nconst ConfigurationsList = () => {\n  const { pathname = \"\" } = useLocation();\n\n  const configName = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName,\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        height: \"100%\",\n        //LDAP and api forms have longer labels\n        \"& .identity_ldap, .api\": {\n          \"& label\": {\n            minWidth: 220,\n            marginRight: 0,\n          },\n        },\n      }}\n    >\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Button, UploadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { performDownload } from \"../../../../common/utils\";\nimport { DateTime } from \"luxon\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useDispatch } from \"react-redux\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst ExportConfigButton = () => {\n  const dispatch = useDispatch();\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      performDownload(\n        new Blob([window.atob(res.value)]),\n        `minio-server-config-${DateTime.now().toFormat(\n          \"LL-dd-yyyy-HH-mm-ss\",\n        )}.conf`,\n      );\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  return (\n    <TooltipWrapper tooltip=\"Warning! The resulting file will contain server configuration information in plain text\">\n      <Button\n        id={\"export-config\"}\n        onClick={() => {\n          invokeApi(\"GET\", `api/v1/configs/export`);\n        }}\n        icon={<UploadIcon />}\n        label={\"Export\"}\n        variant={\"regular\"}\n        disabled={isReqLoading}\n      />\n    </TooltipWrapper>\n  );\n};\n\nexport default ExportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { Button, DownloadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst ImportConfigButton = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const needsRestart = useSelector(\n    (state: AppState) => state.system.serverNeedsRestart,\n  );\n\n  const [refreshPage, setRefreshPage] = useState<boolean | undefined>(\n    undefined,\n  );\n  const fileUpload = useRef<HTMLInputElement>(null);\n\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      dispatch(setServerNeedsRestart(true)); //import should refreshPage as per mc.\n      setRefreshPage(true);\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  useEffect(() => {\n    if (!needsRestart && refreshPage) {\n      navigate(0); // refresh the page.\n    }\n  }, [needsRestart, refreshPage, navigate]);\n\n  const handleUploadButton = (e: any) => {\n    if (\n      e === null ||\n      e === undefined ||\n      e.target.files === null ||\n      e.target.files === undefined\n    ) {\n      return;\n    }\n    e.preventDefault();\n    const [fileToUpload] = e.target.files;\n\n    const formData = new FormData();\n    const blobFile = new Blob([fileToUpload], { type: fileToUpload.type });\n\n    formData.append(\"file\", blobFile, fileToUpload.name);\n    // @ts-ignore\n    invokeApi(\"POST\", `api/v1/configs/import`, formData);\n\n    e.target.value = \"\";\n  };\n\n  return (\n    <Fragment>\n      <input\n        type=\"file\"\n        onChange={handleUploadButton}\n        style={{ display: \"none\" }}\n        ref={fileUpload}\n      />\n      <TooltipWrapper tooltip=\"The file must be valid and  should have valid config values\">\n        <Button\n          id={\"import-config\"}\n          onClick={() => {\n            if (fileUpload && fileUpload.current) {\n              fileUpload.current.click();\n            }\n          }}\n          icon={<DownloadIcon />}\n          label={\"Import\"}\n          variant={\"regular\"}\n          disabled={isReqLoading}\n        />\n      </TooltipWrapper>\n    </Fragment>\n  );\n};\n\nexport default ImportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  PageLayout,\n  ScreenTitle,\n  SettingsIcon,\n  Tabs,\n} from \"mds\";\n\nimport { configurationElements } from \"../utils\";\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n} from \"react-router-dom\";\n\nimport ConfigurationForm from \"./ConfigurationForm\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport ExportConfigButton from \"./ExportConfigButton\";\nimport ImportConfigButton from \"./ImportConfigButton\";\n\nimport HelpMenu from \"../../HelpMenu\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"../../../../api\";\nimport { IElement } from \"../types\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\nconst getRoutePath = (path: string) => {\n  return `${IAM_PAGES.SETTINGS}/${path}`;\n};\n\n// region is not part of config subsystem list.\nconst NON_SUB_SYS_CONFIG_ITEMS = [\"region\"];\nconst IGNORED_CONFIG_SUB_SYS = [\"cache\"]; // cache config is not supported.\n\nconst ConfigurationOptions = () => {\n  const { pathname = \"\" } = useLocation();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [configSubSysList, setConfigSubSysList] = useState<string[]>([]);\n  const fetchConfigSubSysList = useCallback(async () => {\n    api.configs\n      .listConfig() // get a list of available config subsystems.\n      .then((res) => {\n        if (res && res?.data && res?.data?.configurations) {\n          const confSubSysList = (res?.data?.configurations || []).reduce(\n            (acc: string[], { key = \"\" }) => {\n              if (!IGNORED_CONFIG_SUB_SYS.includes(key)) {\n                acc.push(key);\n              }\n              return acc;\n            },\n            [],\n          );\n\n          setConfigSubSysList(confSubSysList);\n        }\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(errorToHandler(err)));\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchConfigSubSysList();\n    dispatch(setHelpName(\"settings_Region\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const availableConfigSubSys = configurationElements.filter(\n    ({ configuration_id }: IElement) => {\n      return (\n        NON_SUB_SYS_CONFIG_ITEMS.includes(configuration_id) ||\n        configSubSysList.includes(configuration_id) ||\n        !configSubSysList.length\n      );\n    },\n  );\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Configuration\"} actions={<HelpMenu />} />\n      <PageLayout>\n        <Grid item xs={12} id={\"settings-container\"}>\n          <ScreenTitle\n            icon={<SettingsIcon />}\n            title={\"Configuration:\"}\n            actions={\n              <Box\n                sx={{\n                  display: \"flex\",\n                  gap: 10,\n                }}\n              >\n                <ImportConfigButton />\n                <ExportConfigButton />\n              </Box>\n            }\n            sx={{ marginBottom: 15 }}\n          />\n          <Tabs\n            currentTabOrPath={pathname}\n            onTabClick={(path) => {\n              navigate(path);\n            }}\n            useRouteTabs\n            options={availableConfigSubSys.map((element) => {\n              const { configuration_id, configuration_label, icon } = element;\n              return {\n                tabConfig: {\n                  id: `settings-tab-${configuration_label}`,\n                  label: configuration_label,\n                  value: configuration_id,\n                  icon: icon,\n                  to: getRoutePath(configuration_id),\n                },\n              };\n            })}\n            routes={\n              <Routes>\n                {availableConfigSubSys.map((element) => (\n                  <Route\n                    key={`configItem-${element.configuration_label}`}\n                    path={`${element.configuration_id}`}\n                    element={<ConfigurationForm />}\n                  />\n                ))}\n                <Route\n                  path={\"/\"}\n                  element={<Navigate to={`${IAM_PAGES.SETTINGS}/region`} />}\n                />\n              </Routes>\n            }\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ConfigurationOptions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n"],"names":["valueDef","key","type","defaults","defValue","length","storedConfig","find","element","value","_ref","onChange","fields","defaultVals","overrideEnv","valueHolder","setValueHolder","useState","fieldsElements","defValList","useEffect","values","map","field","name","setValueElement","index","valuesDup","trim","fieldDefinition","item","holderItem","override","_jsx","ReadBox","label","actionButton","Grid","sx","display","justifyContent","paddingRight","children","Tooltip","tooltip","placement","ConsoleIcon","style","width","Switch","e","target","checked","id","CSVMultiSelector","elements","valCh","Array","isArray","join","commonPlaceholder","placeholder","withBorder","CommentBox","InputBox","FormLayout","withBorders","containerPadding","Fragment","currentElements","setCurrentElements","bottomList","createRef","elementsSplit","split","push","refScroll","current","scrollIntoView","onChangeCallback","useCallback","newString","firstUpdate","useRef","elementsString","filter","onChangeElement","persist","updatedElement","get","parseInt","inputs","toString","overlayIcon","AddIcon","overlayAction","elementsUp","cpList","addEmptyLine","_jsxs","Box","className","InputLabel","alignItems","marginLeft","HelpIcon","overflowY","height","position","ref","configurationElements","icon","PublicIcon","configuration_id","configuration_label","CompressIcon","CodeIcon","FirstAidIcon","FindReplaceIcon","KeyIcon","PendingItemsIcon","LogsIcon","fieldsConfigurations","region","required","compression","api","heal","scanner","etcd","multiline","logger_webhook","audit_webhook","audit_kafka","customValueProcess","origValue","removeEmptyFields","formFields","selectSAs","setSelectedSAs","selectedSAs","targetD","overrideFields","overrideReturn","forEach","envItem","env_override","configurationName","closeResetModalAndRefresh","resetOpen","dispatch","useAppDispatch","resetLoading","setResetLoading","configs","resetConfig","then","catch","err","setErrorSnackMessage","errorToHandler","error","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","resetConfiguration","onClose","confirmationContent","ProgressBar","maxWidth","whiteSpace","wordWrap","open","onCloseEndpoint","setName","endpoint","setEndpoint","authToken","setAuthToken","saving","setSaving","invalidInputs","setInvalidInput","initialInputs","setInitialInputs","initializeInput","validateInput","valid","includes","WebhookIcon","ModalWrapper","modalOpen","event","validity","pattern","xs","marginBottom","modalStyleUtils","modalButtonBar","Button","variant","disabled","onClick","marginRight","color","saveWebhook","payload","key_values","arn_resource_id","setConfig","res","setServerNeedsRestart","data","restart","setSnackBarMessage","configurationIsLoading","selectedARN","deleteLoading","setDeleteLoading","defaultWH","message","onConfirmDelete","_overrideValues$enabl","_overrideValues$enabl2","_overrideValues$endpo","_overrideValues$endpo2","_overrideValues$auth_","_overrideValues$auth_2","endpointInfo","endpointState","setEndpointState","endpointLocate","tokenLocate","enable","endpointValue","tokenValue","hasOverride","itm","overrideValues","auth_token","updateWebhook","setResetConfigurationOpen","WebhookSettingslist","newEndpointOpen","setNewEndpointOpen","deleteWebhookOpen","setDeleteWebhookOpen","editWebhookOpen","setEditWebhookOpen","setSelectedARN","selectedEndpoint","setSelectedEndpoint","actions","disableButtonFunction","wHook","_wHook$key_values","container","AddEndpointModal","DeleteWebhookEndpoint","onCloseDelete","EditWebhookEndpoint","onCloseEditWebhook","padding","DataTable","columns","elementKey","renderFunction","EnableFilter","overrideEnabled","flexDirection","justifyItems","fontSize","fill","TierOfflineIcon","TierOnlineIcon","endpointFilter","itemActions","idField","records","entityName","customPaperHeight","selectedConfiguration","navigate","useNavigate","pathname","useLocation","selConfigTab","substring","lastIndexOf","valuesObj","setValueObj","configValues","setConfigValues","configSubsysList","setConfigSubsysList","resetConfigurationOpen","overrideEnvs","setOverrideEnvs","loadingConfig","useSelector","state","system","loadingConfigurations","configId","configInfo","keyVals","includedValue","customValue","onValueChange","newValue","resetConfigurationMOpen","onMouseMove","setHelpName","ResetConfigurationModal","textAlign","paddingTop","Loader","WebhookSettings","noValidate","onSubmit","preventDefault","flexFlow","gridTemplateColumns","gap","ConfTargetGeneric","maxHeight","ConfigurationsList","configName","validActiveConfig","containerClassName","minWidth","EditConfiguration","ExportConfigButton","useDispatch","isReqLoading","invokeApi","useApi","performDownload","Blob","window","atob","DateTime","now","toFormat","TooltipWrapper","UploadIcon","ImportConfigButton","needsRestart","serverNeedsRestart","refreshPage","setRefreshPage","undefined","fileUpload","files","fileToUpload","formData","FormData","blobFile","append","click","DownloadIcon","NON_SUB_SYS_CONFIG_ITEMS","IGNORED_CONFIG_SUB_SYS","ConfigurationOptions","configSubSysList","setConfigSubSysList","fetchConfigSubSysList","async","listConfig","_res$data","configurations","_res$data2","confSubSysList","reduce","acc","availableConfigSubSys","_ref2","PageHeaderWrapper","HelpMenu","PageLayout","ScreenTitle","SettingsIcon","Tabs","currentTabOrPath","onTabClick","path","useRouteTabs","options","tabConfig","to","IAM_PAGES","SETTINGS","routes","Routes","Route","ConfigurationForm","Navigate","wideLimit","iconColor","openSnackbar","setOpenSnackbar","modalSnackMessage","modalSnackBar","setModalSnackMessage","detailedErrorMsg","ModalBox","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","autoHideDuration","condensed"],"sourceRoot":""}