{"version":3,"file":"static/js/872.8828c9ef.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n}\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n}: IDeleteLifecycleRule) => {\n  const dispatch = useAppDispatch();\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api.buckets\n        .deleteBucketLifecycleRule(bucket, id)\n        .then(() => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err) => {\n          setDeletingRule(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, dispatch]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteBucketLifecycleRule;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  Button,\n  FormLayout,\n  Grid,\n  InputBox,\n  LifecycleConfigIcon,\n  Loader,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { api } from \"api\";\nimport { ApiError } from \"api/consoleApi\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ITiersDropDown, LifeCycleItem } from \"../types\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\ninterface IAddUserContentProps {\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycleRule: LifeCycleItem;\n  open: boolean;\n}\n\nconst EditLifecycleConfiguration = ({\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycleRule,\n  open,\n}: IAddUserContentProps) => {\n  const dispatch = useAppDispatch();\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [expiredAllVersionsDM, setExpiredAllVersionsDM] =\n    useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<\"transition\" | \"expiry\">(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  const ILM_TYPES = [\n    { value: \"expiry\", label: \"Expiry\" },\n    { value: \"transition\", label: \"Transition\" },\n  ];\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersListNames()\n        .then((res) => {\n          const tiersList: string[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tierName: string) => {\n              return { label: tierName, value: tierName };\n            });\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err) => {\n          setLoadingTiers(false);\n          dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [dispatch, loadingTiers, lifecycleRule.transition?.storage_class]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (\n        (transitionDays !== \"0\" && storageClass === \"\") ||\n        (NCTransitionDays !== \"0\" && NCTransitionSC === \"\")\n      ) {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [\n    ilmType,\n    expiryDays,\n    transitionDays,\n    storageClass,\n    NCTransitionDays,\n    NCTransitionSC,\n  ]);\n\n  useEffect(() => {\n    if (lifecycleRule.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycleRule.transition) {\n      if (\n        lifecycleRule.transition.days &&\n        lifecycleRule.transition.days !== 0\n      ) {\n        setTransitionDays(lifecycleRule.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n      if (\n        lifecycleRule.transition.noncurrent_transition_days &&\n        lifecycleRule.transition.noncurrent_transition_days !== 0\n      ) {\n        setNCTransitionDays(\n          lifecycleRule.transition.noncurrent_transition_days.toString(),\n        );\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.transition.date &&\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycleRule.expiration) {\n      if (\n        lifecycleRule.expiration.days &&\n        lifecycleRule.expiration.days !== 0\n      ) {\n        setExpiryDays(lifecycleRule.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n      if (\n        lifecycleRule.expiration.noncurrent_expiration_days &&\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\n      ) {\n        setNCExpirationDays(\n          lifecycleRule.expiration.noncurrent_expiration_days.toString(),\n        );\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.expiration.date &&\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\",\n      );\n      setNCTransitionSC(\n        lifecycleRule.transition?.noncurrent_storage_class || \"\",\n      );\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\",\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\n    setExpiredAllVersionsDM(!!lifecycleRule.expiration?.delete_all);\n    setPrefix(lifecycleRule.prefix || \"\");\n\n    if (lifecycleRule.tags) {\n      const tgs = lifecycleRule.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\",\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycleRule]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycleRule !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry: { [key: string]: number } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          expiry[\"noncurrentversion_expiration_days\"] =\n            parseInt(NCExpirationDays);\n        }\n\n        rules = {\n          ...expiry,\n        };\n      } else {\n        let transition: { [key: string]: number | string } = {};\n\n        if (\n          lifecycleRule.transition?.days &&\n          lifecycleRule.transition?.days > 0\n        ) {\n          transition[\"transition_days\"] = parseInt(transitionDays);\n          transition[\"storage_class\"] = storageClass;\n        }\n        if (lifecycleRule.transition?.noncurrent_transition_days) {\n          transition[\"noncurrentversion_transition_days\"] =\n            parseInt(NCTransitionDays);\n          transition[\"noncurrentversion_transition_storage_class\"] =\n            NCTransitionSC;\n        }\n\n        rules = {\n          ...transition,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        expired_object_delete_all: expiredAllVersionsDM,\n        ...rules,\n      };\n\n      api.buckets\n        .updateBucketLifecycle(\n          selectedBucket,\n          lifecycleRule.id,\n          lifecycleUpdate,\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch(async (eRes) => {\n          setAddLoading(false);\n          const err = (await eRes.json()) as ApiError;\n          dispatch(setErrorSnackMessage(errorToHandler(err)));\n        });\n    }\n  };\n\n  let objectVersion = \"\";\n\n  if (lifecycleRule.expiration) {\n    if (lifecycleRule.expiration.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.expiration.noncurrent_expiration_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  if (lifecycleRule.transition) {\n    if (lifecycleRule.transition.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.transition.noncurrent_transition_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {!loadingTiers ? (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            saveRecord(e);\n          }}\n        >\n          <FormLayout containerPadding={false} withBorders={false}>\n            <Switch\n              label=\"Status\"\n              indicatorLabels={[\"Enabled\", \"Disabled\"]}\n              checked={enabled}\n              value={\"user_enabled\"}\n              id=\"rule_status\"\n              name=\"rule_status\"\n              onChange={(e) => {\n                setEnabled(e.target.checked);\n              }}\n            />\n            <InputBox\n              id=\"id\"\n              name=\"id\"\n              label=\"Id\"\n              value={lifecycleRule.id}\n              onChange={() => {}}\n              disabled\n            />\n            {ilmType ? (\n              <RadioGroup\n                currentValue={ilmType}\n                id=\"rule_type\"\n                name=\"rule_type\"\n                label=\"Rule Type\"\n                selectorOptions={ILM_TYPES}\n                onChange={() => {}}\n                disableOptions\n              />\n            ) : null}\n\n            <InputBox\n              id=\"object-version\"\n              name=\"object-version\"\n              label=\"Object Version\"\n              value={objectVersion}\n              onChange={() => {}}\n              disabled\n            />\n\n            {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\n              <InputBox\n                type=\"number\"\n                id=\"expiry_days\"\n                name=\"expiry_days\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setExpiryDays(e.target.value);\n                }}\n                label=\"Expiry Days\"\n                value={expiryDays}\n                min=\"0\"\n              />\n            )}\n\n            {ilmType === \"expiry\" &&\n              lifecycleRule.expiration?.noncurrent_expiration_days && (\n                <InputBox\n                  type=\"number\"\n                  id=\"noncurrentversion_expiration_days\"\n                  name=\"noncurrentversion_expiration_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setNCExpirationDays(e.target.value);\n                  }}\n                  label=\"Non-current Expiration Days\"\n                  value={NCExpirationDays}\n                  min=\"0\"\n                />\n              )}\n            {ilmType === \"transition\" && lifecycleRule.transition?.days && (\n              <Fragment>\n                <InputBox\n                  type=\"number\"\n                  id=\"transition_days\"\n                  name=\"transition_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setTransitionDays(e.target.value);\n                  }}\n                  label=\"Transition Days\"\n                  value={transitionDays}\n                  min=\"0\"\n                />\n                <Select\n                  label=\"Tier\"\n                  id=\"storage_class\"\n                  name=\"storage_class\"\n                  value={storageClass}\n                  onChange={(value) => {\n                    setStorageClass(value);\n                  }}\n                  options={tiersList}\n                />\n              </Fragment>\n            )}\n\n            {ilmType === \"transition\" &&\n              lifecycleRule.transition?.noncurrent_transition_days && (\n                <Fragment>\n                  <InputBox\n                    type=\"number\"\n                    id=\"noncurrentversion_transition_days\"\n                    name=\"noncurrentversion_transition_days\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setNCTransitionDays(e.target.value);\n                    }}\n                    label=\"Non-current Transition Days\"\n                    value={NCTransitionDays}\n                    min=\"0\"\n                  />\n                  <Select\n                    label=\"Non-current Version Transition Storage Class\"\n                    id=\"noncurrentversion_t_SC\"\n                    name=\"noncurrentversion_t_SC\"\n                    value={NCTransitionSC}\n                    onChange={(value) => {\n                      setNCTransitionSC(value);\n                    }}\n                    options={tiersList}\n                  />\n                </Fragment>\n              )}\n            <Grid item xs={12}>\n              <Accordion\n                title={\"Filters\"}\n                id={\"lifecycle-filters\"}\n                expanded={expanded}\n                onTitleClick={() => setExpanded(!expanded)}\n              >\n                <InputBox\n                  id=\"prefix\"\n                  name=\"prefix\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPrefix(e.target.value);\n                  }}\n                  label=\"Prefix\"\n                  value={prefix}\n                />\n                <QueryMultiSelector\n                  name=\"tags\"\n                  label=\"Tags\"\n                  elements={tags}\n                  onChange={(vl: string) => {\n                    setTags(vl);\n                  }}\n                  keyPlaceholder=\"Tag Key\"\n                  valuePlaceholder=\"Tag Value\"\n                  withBorder\n                />\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" &&\n              lifecycleRule.expiration?.noncurrent_expiration_days && (\n                <Grid item xs={12}>\n                  <Accordion\n                    title={\"Advanced\"}\n                    id={\"lifecycle-advanced-filters\"}\n                    expanded={expandedAdv}\n                    onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                    sx={{ marginTop: 15 }}\n                  >\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expired Object Delete Marker\"}\n                    />\n                    <Switch\n                      value=\"expired_delete_all\"\n                      id=\"expired_delete_all\"\n                      name=\"expired_delete_all\"\n                      checked={expiredAllVersionsDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredAllVersionsDM(event.target.checked);\n                      }}\n                      label={\"Expired All Versions\"}\n                    />\n                  </Accordion>\n                </Grid>\n              )}\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"cancel\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      ) : (\n        <Loader style={{ width: 16, height: 16 }} />\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default EditLifecycleConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  AlertIcon,\n  Button,\n  FormLayout,\n  Grid,\n  HelpTip,\n  InputBox,\n  LifecycleConfigIcon,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { BucketVersioningResponse } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { selDistSet, setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { ITiersDropDown } from \"../types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { IAM_PAGES } from \"common/SecureComponent/permissions\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  bucketName: string;\n}\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  bucketName,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const distributedSetup = useSelector(selDistSet);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [versioningInfo, setVersioningInfo] =\n    useState<BucketVersioningResponse | null>(null);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n\n  const [ilmType, setIlmType] = useState<\"expiry\" | \"transition\">(\"expiry\");\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\n    \"current\",\n  );\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [expiredAllVersionsDM, setExpiredAllVersionsDM] =\n    useState<boolean>(false);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [expiryUnit, setExpiryUnit] = useState<string>(\"days\");\n\n  /*To be removed on component replacement*/\n  const formFieldRowFilter = {\n    \"& .MuiPaper-root\": { padding: 0 },\n  };\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersListNames()\n        .then((res) => {\n          const tiersList: string[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tierName: string) => {\n              return { label: tierName, value: tierName };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err) => {\n          setLoadingTiers(false);\n          dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [dispatch, loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    if (!lifecycleDays || parseInt(lifecycleDays) === 0) {\n      valid = false;\n    }\n    if (parseInt(lifecycleDays) > 2147483647) {\n      //values over int32 cannot be parsed\n      valid = false;\n    }\n    setIsFormValid(valid);\n  }, [ilmType, lifecycleDays, storageClass]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api.buckets\n        .getBucketVersioning(bucketName)\n        .then((res) => {\n          setVersioningInfo(res.data);\n          setLoadingVersioning(false);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry: { [key: string]: number } = {};\n\n      if (targetVersion === \"current\") {\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\n      } else if (expiryUnit === \"days\") {\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\n      } else {\n        expiry[\"newer_noncurrentversion_expiration_versions\"] =\n          parseInt(lifecycleDays);\n      }\n\n      rules = {\n        ...expiry,\n      };\n    } else {\n      let transition: { [key: string]: number | string } = {};\n      if (targetVersion === \"current\") {\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\n        transition[\"storage_class\"] = storageClass;\n      } else if (expiryUnit === \"days\") {\n        transition[\"noncurrentversion_transition_days\"] =\n          parseInt(lifecycleDays);\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\n      }\n\n      rules = {\n        ...transition,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      expired_object_delete_all: expiredAllVersionsDM,\n      ...rules,\n    };\n\n    api.buckets\n      .addBucketLifecycle(bucketName, lifecycleInsert)\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n      });\n  };\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container>\n          <Grid item xs={12}>\n            <ProgressBar />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <FormLayout withBorders={false} containerPadding={false}>\n            <RadioGroup\n              currentValue={ilmType}\n              id=\"ilm_type\"\n              name=\"ilm_type\"\n              label=\"Type of Lifecycle\"\n              onChange={(e) => {\n                setIlmType(e.target.value as \"expiry\" | \"transition\");\n              }}\n              selectorOptions={[\n                { value: \"expiry\", label: \"Expiry\" },\n                { value: \"transition\", label: \"Transition\" },\n              ]}\n              helpTip={\n                <Fragment>\n                  Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html\"\n                  >\n                    Expiry\n                  </a>{\" \"}\n                  to delete Objects per this rule. Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/transition-objects-to-minio.html\"\n                  >\n                    Transition\n                  </a>{\" \"}\n                  to move Objects to a remote storage{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/windows/administration/object-management/transition-objects-to-minio.html#configure-the-remote-storage-tier\"\n                  >\n                    Tier\n                  </a>{\" \"}\n                  per this rule.\n                </Fragment>\n              }\n              helpTipPlacement=\"right\"\n            />\n            {versioningInfo?.status === \"Enabled\" && (\n              <Select\n                value={targetVersion}\n                id=\"object_version\"\n                name=\"object_version\"\n                label=\"Object Version\"\n                onChange={(value) => {\n                  setTargetVersion(value as \"current\" | \"noncurrent\");\n                }}\n                options={[\n                  { value: \"current\", label: \"Current Version\" },\n                  { value: \"noncurrent\", label: \"Non-Current Version\" },\n                ]}\n                helpTip={\n                  <Fragment>\n                    Select whether to apply the rule to current or non-current\n                    Object\n                    <a\n                      target=\"blank\"\n                      href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html#expire-versioned-objects\"\n                    >\n                      {\" \"}\n                      Versions\n                    </a>\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n\n            <InputBox\n              error={\n                lifecycleDays && !isFormValid\n                  ? parseInt(lifecycleDays) <= 0\n                    ? `Number of ${expiryUnit} to retain must be greater than zero`\n                    : parseInt(lifecycleDays) > 2147483647\n                      ? `Number of ${expiryUnit} must be less than or equal to 2147483647`\n                      : \"\"\n                  : \"\"\n              }\n              id=\"expiry_days\"\n              name=\"expiry_days\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                if (e.target.validity.valid) {\n                  setLifecycleDays(e.target.value);\n                }\n              }}\n              pattern={\"[0-9]*\"}\n              label=\"After\"\n              value={lifecycleDays}\n              overlayObject={\n                <Fragment>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <InputUnitMenu\n                      id={\"expire-current-unit\"}\n                      unitSelected={expiryUnit}\n                      unitsList={[\n                        { label: \"Days\", value: \"days\" },\n                        { label: \"Versions\", value: \"versions\" },\n                      ]}\n                      disabled={\n                        targetVersion !== \"noncurrent\" || ilmType !== \"expiry\"\n                      }\n                      onUnitChange={(newValue) => {\n                        setExpiryUnit(newValue);\n                      }}\n                    />\n                    {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n                      <HelpTip\n                        content={\n                          <Fragment>\n                            Select to set expiry by days or newer noncurrent\n                            versions\n                          </Fragment>\n                        }\n                        placement=\"right\"\n                      >\n                        {\" \"}\n                        <AlertIcon style={{ width: 15, height: 15 }} />\n                      </HelpTip>\n                    )}\n                  </Grid>\n                </Fragment>\n              }\n            />\n\n            {ilmType === \"expiry\" ? (\n              <Fragment />\n            ) : (\n              <Select\n                label=\"To Tier\"\n                id=\"storage_class\"\n                name=\"storage_class\"\n                value={storageClass}\n                onChange={(value) => {\n                  setStorageClass(value as string);\n                }}\n                options={tiersList}\n                helpTip={\n                  <Fragment>\n                    Configure a{\" \"}\n                    <a\n                      href={IAM_PAGES.TIERS_ADD}\n                      color=\"secondary\"\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      remote tier\n                    </a>{\" \"}\n                    to receive transitioned Objects\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n            <Grid item xs={12} sx={formFieldRowFilter}>\n              <Accordion\n                title={\"Filters\"}\n                id={\"lifecycle-filters\"}\n                expanded={expanded}\n                onTitleClick={() => setExpanded(!expanded)}\n              >\n                <Grid item xs={12}>\n                  <InputBox\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={\"\"}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n              <Grid item xs={12} sx={formFieldRowFilter}>\n                <Accordion\n                  title={\"Advanced\"}\n                  id={\"lifecycle-advanced-filters\"}\n                  expanded={expandedAdv}\n                  onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                  sx={{ marginTop: 15 }}\n                >\n                  <Grid item xs={12}>\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expire Delete Marker\"}\n                      description={\n                        \"Remove the reference to the object if no versions are left\"\n                      }\n                    />\n                    <Switch\n                      value=\"expired_delete_all\"\n                      id=\"expired_delete_all\"\n                      name=\"expired_delete_all\"\n                      checked={expiredAllVersionsDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredAllVersionsDM(event.target.checked);\n                      }}\n                      label={\"Expire All Versions\"}\n                      description={\n                        \"Removes all the versions of the object already expired\"\n                      }\n                    />\n                  </Grid>\n                </Accordion>\n              </Grid>\n            )}\n\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default AddLifecycleModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  AddIcon,\n  Button,\n  DataTable,\n  Grid,\n  HelpBox,\n  SectionTitle,\n  TiersIcon,\n  HelpTip,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { ObjectBucketLifecycle } from \"api/consoleApi\";\nimport { LifeCycleItem } from \"../types\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst BucketLifecyclePanel = () => {\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const params = useParams();\n\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<\n    ObjectBucketLifecycle[]\n  >([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_lifecycle\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api.buckets\n          .getBucketLifecycle(bucketName)\n          .then((res) => {\n            const records = get(res.data, \"lifecycle\", []);\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err) => {\n            console.error(err.error);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    {\n      label: \"Type\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (\n          el.expiration &&\n          (el.expiration.days > 0 ||\n            el.expiration.noncurrent_expiration_days ||\n            (el.expiration.newer_noncurrent_expiration_versions &&\n              el.expiration.newer_noncurrent_expiration_versions > 0))\n        ) {\n          return <span>Expiry</span>;\n        }\n        if (\n          el.transition &&\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\n        ) {\n          return <span>Transition</span>;\n        }\n        return <Fragment />;\n      },\n    },\n    {\n      label: \"Version\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>Current</span>;\n          } else if (\n            el.expiration.noncurrent_expiration_days ||\n            el.expiration.newer_noncurrent_expiration_versions\n          ) {\n            return <span>Non-Current</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>Current</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Expire Delete Marker\",\n      elementKey: \"expire_delete_marker\",\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration && el.expiration.delete_marker !== undefined) {\n          return <span>{el.expiration.delete_marker ? \"true\" : \"false\"}</span>;\n        } else {\n          return <Fragment />;\n        }\n      },\n      renderFullObject: true,\n    },\n    {\n      label: \"Tier\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"After\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>{el.transition.days} days</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\n          }\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>{el.expiration.days} days</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\n          } else {\n            return (\n              <span>\n                {el.expiration.newer_noncurrent_expiration_versions} versions\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycleRule={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <SectionTitle\n        separator\n        sx={{ marginBottom: 15 }}\n        actions={\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Add Lifecycle Rule\"}>\n              <Button\n                id={\"add-bucket-lifecycle-rule\"}\n                onClick={() => {\n                  setAddLifecycleOpen(true);\n                }}\n                label={\"Add Lifecycle Rule\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        }\n      >\n        <HelpTip\n          content={\n            <Fragment>\n              This derives it’s behavior and syntax from S3 lifecycle for compatibility in migrating workloads and lifecycle rules from S3.\n            </Fragment>\n          }\n          placement=\"right\"\n        >\n          Lifecycle Rules\n        </HelpTip>\n      </SectionTitle>\n      <Grid container>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <DataTable\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={\"400px\"}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, it automatically moves the object to\n                  a configured remote storage tier.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default BucketLifecyclePanel;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n        className={\"inputItem\"}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["UnitMenuButton","styled","button","_ref","theme","border","get","borderRadius","color","backgroundColor","fontSize","_ref2","id","unitSelected","unitsList","disabled","onUnitChange","anchorEl","setAnchorEl","React","open","Boolean","handleClose","newUnit","_jsxs","Fragment","children","_jsx","undefined","onClick","event","currentTarget","type","DropdownSelector","options","selectedOption","onSelect","value","hideTriggerAction","anchorOrigin","onCloseAndRefresh","deleteOpen","bucket","dispatch","useAppDispatch","deletingRule","setDeletingRule","useState","useEffect","api","buckets","deleteBucketLifecycleRule","then","catch","err","setErrorSnackMessage","errorToHandler","error","ConfirmDialog","title","confirmText","isOpen","isLoading","onConfirm","onConfirmDelete","titleIcon","ConfirmDeleteIcon","onClose","confirmationContent","_lifecycleRule$transi2","_lifecycleRule$expira8","_lifecycleRule$expira9","_lifecycleRule$transi0","_lifecycleRule$transi1","_lifecycleRule$expira0","closeModalAndRefresh","selectedBucket","lifecycleRule","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","expiredAllVersionsDM","setExpiredAllVersionsDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","expandedAdv","setExpandedAdv","expanded","setExpanded","admin","tiersListNames","res","data","length","objList","map","tierName","label","_lifecycleRule$transi","transition","storage_class","setModalErrorSnackMessage","valid","_lifecycleRule$expira3","_lifecycleRule$expira4","status","transitionMode","_lifecycleRule$transi3","_lifecycleRule$transi4","_lifecycleRule$transi5","_lifecycleRule$transi6","_lifecycleRule$expira","_lifecycleRule$expira2","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","noncurrent_storage_class","delete_marker","delete_all","tgs","reduce","stringLab","currItem","index","key","objectVersion","ModalWrapper","modalOpen","LifecycleConfigIcon","Loader","style","width","height","noValidate","autoComplete","onSubmit","e","preventDefault","rules","_lifecycleRule$expira5","_lifecycleRule$expira6","_lifecycleRule$expira7","expiry","parseInt","_lifecycleRule$transi7","_lifecycleRule$transi8","_lifecycleRule$transi9","lifecycleUpdate","disable","expired_object_delete_marker","expired_object_delete_all","updateBucketLifecycle","async","eRes","json","saveRecord","FormLayout","containerPadding","withBorders","Switch","indicatorLabels","checked","name","onChange","target","InputBox","RadioGroup","currentValue","selectorOptions","disableOptions","min","Select","Grid","item","xs","Accordion","onTitleClick","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","sx","marginTop","modalStyleUtils","modalButtonBar","Button","variant","ProgressBar","bucketName","distributedSetup","useSelector","selDistSet","versioningInfo","setVersioningInfo","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","expiryUnit","setExpiryUnit","formFieldRowFilter","padding","getBucketVersioning","container","addRecord","lifecycleInsert","addBucketLifecycle","helpTip","href","helpTipPlacement","validity","pattern","overlayObject","justifyContent","InputUnitMenu","newValue","HelpTip","content","placement","AlertIcon","IAM_PAGES","TIERS_ADD","textDecoration","description","BucketLifecyclePanel","loadingBucket","selBucketDetailsLoading","params","useParams","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","displayLifeCycleRules","hasPermission","IAM_SCOPES","S3_GET_LIFECYCLE_CONFIGURATION","S3_GET_ACTIONS","setHelpName","getBucketLifecycle","records","console","lifecycleColumns","renderFullObject","renderFunction","el","newer_noncurrent_expiration_versions","elementKey","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","EditLifecycleConfiguration","refresh","AddLifecycleModal","DeleteBucketLifecycleRule","SectionTitle","separator","marginBottom","actions","SecureComponent","scopes","S3_PUT_LIFECYCLE_CONFIGURATION","S3_PUT_ACTIONS","resource","matchAll","errorProps","TooltipWrapper","tooltip","icon","AddIcon","DataTable","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","iconComponent","TiersIcon","help","wideLimit","iconColor","openSnackbar","setOpenSnackbar","modalSnackMessage","state","system","modalSnackBar","setModalSnackMessage","message","detailedErrorMsg","ModalBox","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","autoHideDuration","condensed","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","className","placeholder","overlayIcon","overlayAction","addEmptyLine","trim","keysList","valuesList","display","alignSelf","margin","fontWeight","InputLabel","Box","marginLeft","alignItems","Tooltip","HelpIcon","overflowY","position","ref"],"sourceRoot":""}